{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Home/Home.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Transition, CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport Filters from \"./../Filters/Filters\";\nimport Card from \"./../../components/Card/Card\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport { HomeRow, HomeWrapper } from \"./HomeStyled\";\nimport Pagination from \"./../../components/Pagination/Pagination\";\nimport { filterGnomesBy, itemsByPage, getCurrentPageGenderFormat, getFirstNames } from \"./../../utils\";\n\nvar Home = function Home(props) {\n  console.log(\"props\");\n  console.log(props.store);\n  var searchTerm = props.searchTerm,\n      gnomes = props.gnomes,\n      orderByFilter = props.orderByFilter,\n      gender = props.gender,\n      currentPage = props.currentPage;\n  useEffect(function () {\n    console.log(\"calling again\");\n    props.fetchGender(format).then(function (response) {\n      _JSON$stringify(response);\n\n      console.log(response);\n    });\n    console.log(\"gender x\");\n    console.log(gender);\n  }, []);\n  /*let updatedPage = props.getCurrentPage(currentPage).payload;\n   const gnomeNames = gnomes.map(gnome => gnome.name)\n  const pageGnomes = gnomeNames.slice(\n    itemsByPage * updatedPage,\n    itemsByPage + updatedPage * itemsByPage\n  )\n   pageGnomes.map(gnome => (\n    gnome => gnome.name\n  ))\n   const getFirstName = arr =>{\n    var arrCroped = [];\n      for(var a=0; a<arr.length; a++){\n         var corte = arr[a].indexOf(\" \");\n        arrCroped[a] = arr[a].substr(0, corte);\n      }\n      return arrCroped;\n  }\n   const justRenderedPageNames = getFirstName(pageGnomes);\n   const parseToService = arrToFormat =>{\n    var arrayFormated = [];\n       for(var b=0; b<arrToFormat.length; b++){\n        arrayFormated[b] = \"name[]=\"+arrToFormat[b];\n      }\n       return arrayFormated;\n   }\n   const format = parseToService(justRenderedPageNames).toString().replace(/,/g, \"&\");*/\n\n  var format = getCurrentPageGenderFormat(gnomes, props.getCurrentPage(currentPage).payload);\n  var names = getFirstNames(gnomes, props.getCurrentPage(currentPage).payload);\n\n  var guessGender = function guessGender(names) {\n    console.log(names);\n    console.log(gender);\n    names.forEach(function (val, index) {\n      console.log(val); //console.log(val)\n\n      /*gender.filter(val => {\n      } );*/\n    });\n  };\n\n  guessGender(names);\n  var searchFilters = filterGnomesBy(gnomes, orderByFilter).filter(function (gnome) {\n    var isJob = gnome.professions.find(function (profession) {\n      return profession === props.filterBy;\n    });\n    var hasProfession = gnome.professions.some(function (profession) {\n      return profession === isJob;\n    });\n    return props.filterBy === \"All\" ? gnome : hasProfession;\n  }).filter(function (gnome) {\n    var search = gnome.name.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0;\n    return search;\n  });\n  return __jsx(HomeWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Nicolas Bergues\"), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Assesment App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), __jsx(HomeRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Filters, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), __jsx(Pagination, {\n    gnomes: props.gnomes,\n    page: currentPage,\n    updateGlobalState: props.getCurrentPage,\n    maxPages: Math.floor(searchFilters.length / itemsByPage),\n    callGender: props.fetchGender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), __jsx(HomeRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(TransitionGroup, {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, searchFilters.length > 0 ? searchFilters.slice(itemsByPage * currentPage, itemsByPage + currentPage * itemsByPage).map(function (gnome) {\n    return __jsx(CSSTransition, {\n      key: gnome.id,\n      timeout: 500,\n      classNames: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(Card, {\n      key: gnome.id,\n      gnome: gnome && gnome,\n      to: \"\".concat(gnome.id, \"-\").concat(gnome.name.split(\" \").join(\"-\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }) : __jsx(\"div\", {\n    className: \"notFound\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"no gnomes founded for current search\"))), __jsx(Pagination, {\n    gnomes: props.gnomes,\n    page: currentPage,\n    updateGlobalState: props.getCurrentPage,\n    maxPages: Math.floor(searchFilters.length / itemsByPage),\n    callGender: props.fetchGender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    searchTerm: state.searchTerm,\n    gnomes: state.gnomes,\n    gender: state.gender,\n    filterBy: state.filterBy,\n    orderByFilter: state.orderBy,\n    currentPage: state.currentPage\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Home);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Home/Home.js"],"names":["React","useState","useEffect","Helmet","Transition","CSSTransition","TransitionGroup","connect","Filters","Card","actions","HomeRow","HomeWrapper","Pagination","filterGnomesBy","itemsByPage","getCurrentPageGenderFormat","getFirstNames","Home","props","console","log","store","searchTerm","gnomes","orderByFilter","gender","currentPage","fetchGender","format","then","response","getCurrentPage","payload","names","guessGender","forEach","val","index","searchFilters","filter","gnome","isJob","professions","find","profession","filterBy","hasProfession","some","search","name","toLowerCase","indexOf","Math","floor","length","slice","map","id","split","join","mapStateToProps","state","orderBy"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Transition, CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport Filters from \"./../Filters/Filters\";\nimport Card from \"./../../components/Card/Card\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport { HomeRow, HomeWrapper } from \"./HomeStyled\";\nimport Pagination from \"./../../components/Pagination/Pagination\";\nimport { filterGnomesBy, itemsByPage, getCurrentPageGenderFormat, getFirstNames } from \"./../../utils\";\n\n\nconst Home = (props) => {\n\n  console.log(\"props\")\n  console.log(props.store)\n  const { searchTerm, gnomes, orderByFilter, gender, currentPage} = props;\n\n  useEffect(() => {\n    console.log(\"calling again\")\n    props.fetchGender(format).then(response =>{ JSON.stringify(response); console.log(response)})\n\n    console.log(\"gender x\")\n    console.log(gender)\n\n  }, [])\n\n\n  /*let updatedPage = props.getCurrentPage(currentPage).payload;\n\n  const gnomeNames = gnomes.map(gnome => gnome.name)\n  const pageGnomes = gnomeNames.slice(\n    itemsByPage * updatedPage,\n    itemsByPage + updatedPage * itemsByPage\n  )\n\n  pageGnomes.map(gnome => (\n    gnome => gnome.name\n  ))\n\n  const getFirstName = arr =>{\n    var arrCroped = [];\n      for(var a=0; a<arr.length; a++){\n\n        var corte = arr[a].indexOf(\" \");\n        arrCroped[a] = arr[a].substr(0, corte);\n      }\n      return arrCroped;\n  }\n\n  const justRenderedPageNames = getFirstName(pageGnomes);\n\n  const parseToService = arrToFormat =>{\n    var arrayFormated = [];\n\n      for(var b=0; b<arrToFormat.length; b++){\n        arrayFormated[b] = \"name[]=\"+arrToFormat[b];\n      }\n\n      return arrayFormated;\n\n  }\n\n  const format = parseToService(justRenderedPageNames).toString().replace(/,/g, \"&\");*/\n\n  const format = getCurrentPageGenderFormat(gnomes, props.getCurrentPage(currentPage).payload)\n\n\n  const names = getFirstNames(gnomes, props.getCurrentPage(currentPage).payload);\n\n\n  const guessGender = (names) => {\n\n      console.log(names)\n      console.log(gender)\n\n      names.forEach( function(val,index) {\n\n          console.log(val)\n          //console.log(val)\n          /*gender.filter(val => {\n\n    } );*/\n  })\n}\n  guessGender(names)\n\n  const searchFilters = filterGnomesBy(gnomes, orderByFilter)\n    .filter(gnome => {\n\n      const isJob = gnome.professions.find(\n        profession => profession === props.filterBy\n      );\n\n      const hasProfession = gnome.professions.some(\n        profession => profession === isJob\n      );\n\n      return props.filterBy === \"All\" ? gnome : hasProfession;\n    })\n    .filter(gnome => {\n\n      const search =\n        gnome.name.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0;\n      return search;\n    });\n\n  return (\n    <HomeWrapper>\n      <Helmet>\n        <title>Nicolas Bergues</title>\n        <link rel=\"shortcut icon\" href=\"favicon.ico\" />\n        <meta\n          name=\"description\"\n          content=\"Assesment App\"\n        />\n      </Helmet>\n      <HomeRow>\n        <Filters />\n      </HomeRow>\n      <Pagination\n        gnomes={props.gnomes}\n        page={currentPage}\n        updateGlobalState={props.getCurrentPage}\n        maxPages={Math.floor(searchFilters.length / itemsByPage)}\n        callGender={props.fetchGender}\n      />\n      <HomeRow>\n      <TransitionGroup className=\"cards\">\n        {searchFilters.length > 0 ? (\n          searchFilters\n            .slice(\n              itemsByPage * currentPage,\n              itemsByPage + currentPage * itemsByPage\n            )\n            .map(gnome => (\n              <CSSTransition key={gnome.id} timeout={500} classNames=\"item\">\n                <Card\n                  key={gnome.id}\n                  gnome={gnome && gnome}\n                  to={`${gnome.id}-${gnome.name.split(\" \").join(\"-\")}`}\n                />\n              </CSSTransition>\n            ))\n        ) : (\n          <div className={\"notFound\"}>no gnomes founded for current search</div>\n        )}\n        </TransitionGroup>\n      </HomeRow>\n      <Pagination\n        gnomes={props.gnomes}\n        page={currentPage}\n        updateGlobalState={props.getCurrentPage}\n        maxPages={Math.floor(searchFilters.length / itemsByPage)}\n        callGender={props.fetchGender}\n      />\n    </HomeWrapper>\n  );\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    searchTerm: state.searchTerm,\n    gnomes: state.gnomes,\n    gender: state.gender,\n    filterBy: state.filterBy,\n    orderByFilter: state.orderBy,\n    currentPage: state.currentPage\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Home);\n"]},"metadata":{},"sourceType":"module"}