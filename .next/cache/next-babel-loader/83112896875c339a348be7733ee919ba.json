{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n// @flow\nimport axios from \"axios\";\nimport { gnomesAPI } from \"./../../functions\"; //import type { Gnome } from \"./flow-typed/types\";\n\nimport { REQUEST_GNOMES, SEARCH_TERM, FILTER_BY_JOB, ORDER_BY_FILTER, CURRENT_PAGE } from \"./types\";\nexport var getGnomes = function getGnomes(gnomes) {\n  return {\n    type: REQUEST_GNOMES,\n    payload: gnomes\n  };\n};\n/* eslint-disable */\n\nexport var fetchGnomes = function fetchGnomes() {\n  return function _callee(dispatch) {\n    var offlineGnomes, gnomes, _ref, _gnomes, gnomesToJSON;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            offlineGnomes = localStorage.getItem(\"gnomes\");\n\n            if (!offlineGnomes) {\n              _context.next = 4;\n              break;\n            }\n\n            gnomes = JSON.parse(offlineGnomes);\n            return _context.abrupt(\"return\", dispatch(getGnomes(gnomes)));\n\n          case 4:\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.get(gnomesAPI));\n\n          case 7:\n            _ref = _context.sent;\n            _gnomes = _ref.data.Brastlewark;\n            gnomesToJSON = _JSON$stringify(_gnomes);\n            localStorage.setItem(\"gnomes\", gnomesToJSON);\n            dispatch(getGnomes(_gnomes));\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](4);\n            throw new Error(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 14]]);\n  };\n};\n/* eslint-enable */\n\nexport var getSearchText = function getSearchText(searchTerm) {\n  return {\n    type: SEARCH_TERM,\n    payload: searchTerm\n  };\n};\nexport var filterByJob = function filterByJob(job) {\n  return {\n    type: FILTER_BY_JOB,\n    payload: job\n  };\n};\nexport var updateOrderBy = function updateOrderBy(order) {\n  return {\n    type: ORDER_BY_FILTER,\n    payload: order\n  };\n};\nexport var getCurrentPage = function getCurrentPage(page) {\n  return {\n    type: CURRENT_PAGE,\n    payload: page\n  };\n}; //////////","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/redux/actions/actions.js"],"names":["axios","gnomesAPI","REQUEST_GNOMES","SEARCH_TERM","FILTER_BY_JOB","ORDER_BY_FILTER","CURRENT_PAGE","getGnomes","gnomes","type","payload","fetchGnomes","dispatch","offlineGnomes","localStorage","getItem","JSON","parse","get","data","Brastlewark","gnomesToJSON","setItem","Error","getSearchText","searchTerm","filterByJob","job","updateOrderBy","order","getCurrentPage","page"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,eAJF,EAKEC,YALF,QAMO,SANP;AAQA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAa;AACpCC,IAAAA,IAAI,EAAEP,cAD8B;AAEpCQ,IAAAA,OAAO,EAAEF;AAF2B,GAAb;AAAA,CAAlB;AAKP;;AACA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,YAAAA,aADyB,GACTC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADS;;AAAA,iBAE3BF,aAF2B;AAAA;AAAA;AAAA;;AAGvBL,YAAAA,MAHuB,GAGdQ,IAAI,CAACC,KAAL,CAAWJ,aAAX,CAHc;AAAA,6CAItBD,QAAQ,CAACL,SAAS,CAACC,MAAD,CAAV,CAJc;;AAAA;AAAA;AAAA;AAAA,6CAQmBR,KAAK,CAACkB,GAAN,CAAUjB,SAAV,CARnB;;AAAA;AAAA;AAQAO,YAAAA,OARA,QAQrBW,IARqB,CAQbC,WARa;AASvBC,YAAAA,YATuB,GASR,gBAAeb,OAAf,CATQ;AAU7BM,YAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BD,YAA/B;AACAT,YAAAA,QAAQ,CAACL,SAAS,CAACC,OAAD,CAAV,CAAR;AAX6B;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAavB,IAAIe,KAAJ,aAbuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAApB;AAiBP;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD;AAAA,SAAiB;AAC5ChB,IAAAA,IAAI,EAAEN,WADsC;AAE5CO,IAAAA,OAAO,EAAEe;AAFmC,GAAjB;AAAA,CAAtB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,SAAU;AACnClB,IAAAA,IAAI,EAAEL,aAD6B;AAEnCM,IAAAA,OAAO,EAAEiB;AAF0B,GAAV;AAAA,CAApB;AAKP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAY;AACvCpB,IAAAA,IAAI,EAAEJ,eADiC;AAEvCK,IAAAA,OAAO,EAAEmB;AAF8B,GAAZ;AAAA,CAAtB;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AACvCtB,IAAAA,IAAI,EAAEH,YADiC;AAEvCI,IAAAA,OAAO,EAAEqB;AAF8B,GAAX;AAAA,CAAvB,C,CAMP","sourcesContent":["// @flow\nimport axios from \"axios\";\nimport { gnomesAPI } from \"./../../functions\";\n//import type { Gnome } from \"./flow-typed/types\";\nimport {\n  REQUEST_GNOMES,\n  SEARCH_TERM,\n  FILTER_BY_JOB,\n  ORDER_BY_FILTER,\n  CURRENT_PAGE\n} from \"./types\";\n\nexport const getGnomes = (gnomes) => ({\n  type: REQUEST_GNOMES,\n  payload: gnomes\n});\n\n/* eslint-disable */\nexport const fetchGnomes = () => async (dispatch) => {\n  const offlineGnomes = localStorage.getItem(\"gnomes\");\n  if (offlineGnomes) {\n    const gnomes = JSON.parse(offlineGnomes);\n    return dispatch(getGnomes(gnomes));\n  }\n\n  try {\n    const { data: { Brastlewark: gnomes } } = await axios.get(gnomesAPI);\n    const gnomesToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gnomes\", gnomesToJSON);\n    dispatch(getGnomes(gnomes));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/* eslint-enable */\nexport const getSearchText = (searchTerm) => ({\n  type: SEARCH_TERM,\n  payload: searchTerm\n});\n\nexport const filterByJob = (job) => ({\n  type: FILTER_BY_JOB,\n  payload: job\n});\n\nexport const updateOrderBy = (order) => ({\n  type: ORDER_BY_FILTER,\n  payload: order\n});\n\nexport const getCurrentPage = (page) => ({\n  type: CURRENT_PAGE,\n  payload: page\n});\n\n\n//////////\n"]},"metadata":{},"sourceType":"module"}