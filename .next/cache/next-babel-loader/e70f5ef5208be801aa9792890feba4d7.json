{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\nconst Gender = props => {\n  const {\n    to,\n    gnome\n  } = props;\n  useEffect(() => {\n    const cut = gnome.name.indexOf(\" \");\n    name = gnome.name.substr(0, cut);\n    props.fetchGender(\"name[]=\" + name).then(response => {\n      JSON.stringify(response);\n      console.log(response);\n    });\n  }, []); //const format = getCurrentPageGenderFormat(gnomes, props.getCurrentPage(currentPage).payload)\n\n  return __jsx(GnomeCard, {\n    to: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(Avatar, {\n    src: gnome && gnome.thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: gnome && gnome.thumbnail,\n    alt: `avatar ${gnome && gnome.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), __jsx(\"header\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, gnome && gnome.name), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, gnome.professions.length > 0 ? gnome.professions.join(\" • \") : \"No Profession\")), __jsx(GnomeInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(GnomeInfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Age\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, gnome && gnome.age)), __jsx(GnomeInfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Weight\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, gnome && Math.ceil(gnome.weight), \" \", __jsx(\"span\", {\n    className: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"KG\"))), __jsx(GnomeInfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Height\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, gnome && Math.ceil(gnome.height), \" \", __jsx(\"span\", {\n    className: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"CM\")))), __jsx(\"div\", {\n    className: \"banner-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  gnomes: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js"],"names":["React","useEffect","connect","actions","convertColors","GnomeCard","Avatar","GnomeInfo","GnomeInfoList","Gender","props","to","gnome","cut","name","indexOf","substr","fetchGender","then","response","JSON","stringify","console","log","thumbnail","professions","length","join","hair_color","age","Math","ceil","weight","height","mapStateToProps","state","gnomes","gender"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\n\nconst Gender = (props) => {\n\n  const { to, gnome} = props;\n\n  useEffect(() => {\n    const cut = gnome.name.indexOf(\" \");\n    name = gnome.name.substr(0, cut);\n    props.fetchGender(\"name[]=\"+ name).then(response =>{ JSON.stringify(response); console.log(response)})\n\n  }, [])\n  //const format = getCurrentPageGenderFormat(gnomes, props.getCurrentPage(currentPage).payload)\n\n  return(\n\n  <GnomeCard to={to}>\n    <div className=\"banner\" />\n\n    <Avatar src={gnome && gnome.thumbnail}>\n      <img\n        src={gnome && gnome.thumbnail}\n        alt={`avatar ${gnome && gnome.name}`}\n      />\n    </Avatar>\n    <header className=\"description\">\n      <h2>{gnome && gnome.name}</h2>\n      <div>\n        {gnome.professions.length > 0\n          ? gnome.professions.join(\" • \")\n          : \"No Profession\"}\n      </div>\n\n    </header>\n    <GnomeInfo>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Age</span>\n        <span>{gnome && gnome.age}</span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Weight</span>\n        <span>\n          {gnome && Math.ceil(gnome.weight)} <span className=\"unit\">KG</span>\n        </span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Height</span>\n        <span>\n          {gnome && Math.ceil(gnome.height)} <span className=\"unit\">CM</span>\n        </span>\n      </GnomeInfoList>\n    </GnomeInfo>\n    <div className=\"banner-footer\" />\n  </GnomeCard>\n\n)};\n\nconst mapStateToProps = state => ({\n  gnomes: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);\n"]},"metadata":{},"sourceType":"module"}