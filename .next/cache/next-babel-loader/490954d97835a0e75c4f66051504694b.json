{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Filters/Filters.jsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormSearch, FormRow } from \"./FiltersStyled\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport AutoComplete from \"./../../components/AutoComplete/AutoComplete\";\nimport Select from \"./../../components/Select/Select\";\nimport OrderByBTN from \"./../../components/OrderBy/OrderBy.js\";\n\nvar Filters = function Filters(props) {\n  var gnomeNames = props.gnomes.map(function (gnome) {\n    return gnome.name;\n  });\n  var getJobs = [];\n\n  for (var i = 0; i < props.gnomes.length; i++) {\n    getJobs = getJobs.concat(props.gnomes[i].professions);\n  }\n\n  var jobs = _Array$from(new _Set(getJobs));\n\n  return __jsx(FormSearch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(OrderByBTN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Most Friendly\"), __jsx(OrderByBTN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Less Friendly\"), __jsx(OrderByBTN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Youngest\"), __jsx(OrderByBTN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Oldest\"), __jsx(OrderByBTN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Lightest\"), __jsx(OrderByBTN, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Heaviest\")), __jsx(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"filterWrappTitles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"profession\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Search by Name\"), __jsx(\"div\", {\n    className: \"profession\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Search by Profession\")), __jsx(FormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"filterWrapp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(AutoComplete, {\n    stateName: \"searchTerm\",\n    updateCurrentPage: props.getCurrentPage,\n    parentUpdateState: props.getSearchText,\n    autoCompleteItems: gnomeNames,\n    maxSuggests: 5,\n    maxWidth: \"100%\",\n    labelName: \"Search Gnome Name: \",\n    placeholder: \"Type Gnome Name: \",\n    includeSearchTerm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(Select, {\n    items: jobs && jobs,\n    defaultValue: \"All Professions\",\n    stateName: \"filteBy\",\n    maxWidth: \"100%\",\n    updateState: props.filterByJob,\n    updateCurrentPage: props.getCurrentPage,\n    state: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Filters);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Filters/Filters.jsx"],"names":["React","connect","FormSearch","FormRow","actions","AutoComplete","Select","OrderByBTN","Filters","props","gnomeNames","gnomes","map","gnome","name","getJobs","i","length","concat","professions","jobs","getCurrentPage","getSearchText","filterByJob","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormSearch, FormRow } from \"./FiltersStyled\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport AutoComplete from \"./../../components/AutoComplete/AutoComplete\";\nimport Select from \"./../../components/Select/Select\";\nimport OrderByBTN from \"./../../components/OrderBy/OrderBy.js\";\n\n\nconst Filters = (props) => {\n\n  const gnomeNames = props.gnomes.map(gnome => gnome.name);\n\n  let getJobs = [];\n\n  for (let i = 0; i < props.gnomes.length; i++) {\n    getJobs = getJobs.concat(props.gnomes[i].professions);\n  }\n\n  const jobs = Array.from(new Set(getJobs));\n\n  return (\n    <FormSearch>\n      <FormRow>\n        <OrderByBTN>Most Friendly</OrderByBTN>\n        <OrderByBTN>Less Friendly</OrderByBTN>\n        <OrderByBTN>Youngest</OrderByBTN>\n        <OrderByBTN>Oldest</OrderByBTN>\n        <OrderByBTN>Lightest</OrderByBTN>\n        <OrderByBTN>Heaviest</OrderByBTN>\n        </FormRow>\n        <FormRow>\n        </FormRow>\n        <div className={\"filterWrappTitles\"}>\n          <div className={\"profession\"}>Search by Name</div>\n          <div className={\"profession\"}>Search by Profession</div>\n        </div>\n        <FormRow>\n        <div className={\"filterWrapp\"}>\n        <AutoComplete\n          stateName=\"searchTerm\"\n          updateCurrentPage={props.getCurrentPage}\n          parentUpdateState={props.getSearchText}\n          autoCompleteItems={gnomeNames}\n          maxSuggests={5}\n          maxWidth=\"100%\"\n          labelName=\"Search Gnome Name: \"\n          placeholder=\"Type Gnome Name: \"\n          includeSearchTerm\n        />\n\n          <Select\n            items={jobs && jobs}\n            defaultValue=\"All Professions\"\n            stateName=\"filteBy\"\n            maxWidth=\"100%\"\n            updateState={props.filterByJob}\n            updateCurrentPage={props.getCurrentPage}\n            state={props}\n          />\n        </div>\n      </FormRow>\n    </FormSearch>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Filters);\n"]},"metadata":{},"sourceType":"module"}