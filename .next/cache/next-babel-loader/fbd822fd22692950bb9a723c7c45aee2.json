{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/GenderCard/GenderCard.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport GenderCardStyle from \"./GenderCardStyled\";\n\nconst GenderCard = props => {\n  let randomNumberAprox = Math.floor(Math.random() * (100 - 70 + 1)) + 50;\n\n  const findOutIfFemale = name => {\n    let isFemale;\n    ;\n    const char = name.substr(-1);\n    isFemale = isVowel(char);\n\n    function isVowel(x) {\n      let result;\n      result = x == \"a\" || x == \"e\" || x == \"i\" || x == \"o\" || x == \"u\";\n      return result;\n    }\n\n    return isFemale;\n  };\n\n  if (props.gender.length > 0) {\n    if (props.gender[0].gender) {\n      return __jsx(GenderCardStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, props.gender[0].name, \" it's a \", props.gender[0].gender == \"male\" ? \"Boy\" : \"Girl\", \"!\"), __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"(\", props.gender[0].probability * 100, \"% chances according to our report)\")));\n    } else if (!props.gender[0].gender && findOutIfFemale(props.gender[0].name) == true) {\n      return __jsx(GenderCardStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, props.gender[0].name, \" it's a Girl!\"), __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"(\", randomNumberAprox, \"% chances according to our report)\")));\n    } else {\n      return __jsx(GenderCardStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, props.gender[0].name, \" could be an hermafrodith gnome with \", randomNumberAprox, \"% of chances.\")));\n    }\n  } else {\n    return __jsx(GenderCardStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Loading Gender...\")));\n  }\n};\n\nexport default GenderCard;","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/GenderCard/GenderCard.js"],"names":["React","GenderCardStyle","GenderCard","props","randomNumberAprox","Math","floor","random","findOutIfFemale","name","isFemale","char","substr","isVowel","x","result","gender","length","probability"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,MAAIC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,EAAN,GAAW,CAA5B,CAAX,IAA6C,EAArE;;AAEA,QAAMC,eAAe,GAAEC,IAAD,IAAQ;AAE5B,QAAIC,QAAJ;AAAa;AAEb,UAAMC,IAAI,GAAGF,IAAI,CAACG,MAAL,CAAY,CAAC,CAAb,CAAb;AACAF,IAAAA,QAAQ,GAAGG,OAAO,CAACF,IAAD,CAAlB;;AACI,aAASE,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,UAAIC,MAAJ;AACAA,MAAAA,MAAM,GAAGD,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAjB,IAAwBA,CAAC,IAAI,GAA7B,IAAoCA,CAAC,IAAI,GAAzC,IAAgDA,CAAC,IAAI,GAA9D;AACA,aAAOC,MAAP;AACH;;AACL,WAAOL,QAAP;AACD,GAZD;;AAcA,MAAGP,KAAK,CAACa,MAAN,CAAaC,MAAb,GAAsB,CAAzB,EAA2B;AACvB,QAAGd,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBA,MAAnB,EAA0B;AAC1B,aACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBP,IADnB,cACiCN,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBA,MAAhB,IAA0B,MAA1B,GAAmC,KAAnC,GAA2C,MAD5E,MADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMb,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBE,WAAhB,GAA8B,GAApC,uCAJF,CADF,CADF;AAUH,KAXG,MAWE,IAAG,CAACf,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBA,MAAjB,IAA2BR,eAAe,CAACL,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBP,IAAjB,CAAf,IAAyC,IAAvE,EAA4E;AAC9E,aACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBP,IADnB,kBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAML,iBAAN,uCAJF,CADF,CADF;AAUH,KAXK,MAWD;AACH,aACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgBP,IADnB,2CAC8DL,iBAD9D,kBADF,CADF,CADF;AAUD;AACF,GAnCC,MAmCG;AACC,WACA,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CADA;AASJ;AACD,CAhED;;AAkEA,eAAeF,UAAf","sourcesContent":["import React from \"react\";\nimport GenderCardStyle from \"./GenderCardStyled\";\n\nconst GenderCard = (props) => {\n\n  let randomNumberAprox = Math.floor(Math.random() * (100 - 70 + 1)) + 50;\n\n  const findOutIfFemale=(name)=>{\n\n    let isFemale;;\n\n    const char = name.substr(-1);\n    isFemale = isVowel(char)\n        function isVowel(x) {\n            let result;\n            result = x == \"a\" || x == \"e\" || x == \"i\" || x == \"o\" || x == \"u\";\n            return result;\n        }\n    return isFemale;\n  }\n\n  if(props.gender.length > 0){\n      if(props.gender[0].gender){\n      return(\n        <GenderCardStyle>\n          <div className=\"column\">\n            <h1>\n              {props.gender[0].name} it's a {props.gender[0].gender == \"male\" ? \"Boy\" : \"Girl\"}!\n            </h1>\n            <h3>({props.gender[0].probability * 100}% chances according to our report)</h3>\n          </div>\n        </GenderCardStyle>\n    )\n  }else if(!props.gender[0].gender && findOutIfFemale(props.gender[0].name) == true){\n      return(\n        <GenderCardStyle>\n          <div className=\"column\">\n            <h1>\n              {props.gender[0].name} it's a Girl!\n            </h1>\n            <h3>({randomNumberAprox}% chances according to our report)</h3>\n          </div>\n        </GenderCardStyle>\n    )\n  }else{\n    return(\n      <GenderCardStyle>\n        <div className=\"column\">\n          <h1>\n            {props.gender[0].name} could be an hermafrodith gnome with {randomNumberAprox}% of chances.\n          </h1>\n\n        </div>\n      </GenderCardStyle>\n  )\n  }\n}else{\n      return(\n      <GenderCardStyle>\n        <div className=\"row\">\n          <h1>\n            Loading Gender...\n          </h1>\n        </div>\n      </GenderCardStyle>\n    )\n }\n};\n\nexport default GenderCard;\n"]},"metadata":{},"sourceType":"module"}