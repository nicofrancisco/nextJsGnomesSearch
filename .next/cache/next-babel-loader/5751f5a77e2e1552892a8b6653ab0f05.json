{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Main.js\";\nvar __jsx = React.createElement;\n// @flow\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from 'next/link'; //import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport * as actions from \"../redux/actions/actions\";\nimport Loading from \"../components/Loading/Loading\";\nimport Home from './Home/Home.js';\nimport Routes from \"./../../routes/routes\";\nimport Details from \"./../containers/Details/Details.js\";\nimport Header from \"./Header/Header.js\";\nimport Footer from \"./../components/Footer/Footer.js\"; // Declaring Flow types for Props\n\n/*type Props = {\n  fetchGnomes: Function,\n  gnomes: Array<Gnome>\n};*/\n// now pass the Types declaration to our class component\n\nclass Main extends Component {\n  componentDidMount() {\n    console.log(\"mount\"); // Get all the gnomes from the Api\n    // this is an action creator we got from the react-redux connect method\n\n    this.props.fetchGnomes();\n  } // If there is not gnomes in the gnomes state (got from Redux state)\n  // it will render Loading component first while we can receive all the inhabitants\n\n\n  render() {\n    //\"/gnomes/297-Malbert-Wrongtink\">\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.gnomes.length === 0 ? __jsx(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Hola \", this.props.gnomes.length, \"/*\", __jsx(Link, {\n      href: \"./../containers/Home/Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"About Page link a\")), \"*/\", __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(Home, {\n      data: this.props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(Routes, {\n      gnomes: this.props.gnomes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))) //<Details gnomes={this.props.gnomes} gnomeURL=\"0-Tobus-Quickwhistle\" />\n\n    /*<Router>\n     </Router>*/\n    ;\n  }\n\n} // mapStateToProps we pass this function to the connect method to\n// inject our Redux states as props in Main container\n\n\nfunction mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Main);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Main.js"],"names":["React","Component","connect","Link","actions","Loading","Home","Routes","Details","Header","Footer","Main","componentDidMount","console","log","props","fetchGnomes","render","gnomes","length","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB,C,CAEA;;AACA;;;;AAKA;;AACA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC3BW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADkB,CAElB;AACA;;AACA,SAAKC,KAAL,CAAWC,WAAX;AACD,GAN0B,CAQ3B;AACA;;;AACAC,EAAAA,MAAM,GAAG;AAAC;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,KAA6B,CAA7B,GACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY,KAAKJ,KAAL,CAAWG,MAAX,CAAkBC,MAA9B,QAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,CAFF,QAKA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EAMA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,EAQA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EASA,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKA,KAAL,CAAWG,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CAJF,CADF,CAsBE;;AACA;;AAvBF;AA2BD;;AAtC0B,C,CAyC7B;AACA;;;AACA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,MAAM,EAAEG,KAAK,CAACH;AADT,GAAP;AAGD;;AAED,eAAehB,OAAO,CAACkB,eAAD,EAAkBhB,OAAlB,CAAP,CAAkCO,IAAlC,CAAf","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from 'next/link';\n//import { BrowserRouter as Router } from \"react-router-dom\";\nimport * as actions from \"../redux/actions/actions\";\nimport Loading from \"../components/Loading/Loading\";\nimport Home from './Home/Home.js'\nimport Routes from \"./../../routes/routes\";\nimport Details from \"./../containers/Details/Details.js\";\nimport Header from \"./Header/Header.js\";\nimport Footer from \"./../components/Footer/Footer.js\";\n\n// Declaring Flow types for Props\n/*type Props = {\n  fetchGnomes: Function,\n  gnomes: Array<Gnome>\n};*/\n\n// now pass the Types declaration to our class component\nclass Main extends Component {\n  componentDidMount() {\n    console.log(\"mount\")\n    // Get all the gnomes from the Api\n    // this is an action creator we got from the react-redux connect method\n    this.props.fetchGnomes();\n  }\n\n  // If there is not gnomes in the gnomes state (got from Redux state)\n  // it will render Loading component first while we can receive all the inhabitants\n  render() {//\"/gnomes/297-Malbert-Wrongtink\">\n    return (\n      <div>\n      {this.props.gnomes.length === 0 ? (\n        <Loading />\n      ) : (\n        <div> Hola {this.props.gnomes.length}\n\n        /*<Link href=\"./../containers/Home/Home\">\n          <a>About Page link a</a>\n        </Link>*/\n        <Header />\n        <Home data={this.props}/>\n\n        <Footer />\n        <Routes gnomes={this.props.gnomes}>\n\n        </Routes>\n\n        </div>\n\n      )}\n      </div>\n      //<Details gnomes={this.props.gnomes} gnomeURL=\"0-Tobus-Quickwhistle\" />\n      /*<Router>\n\n      </Router>*/\n    );\n  }\n}\n\n// mapStateToProps we pass this function to the connect method to\n// inject our Redux states as props in Main container\nfunction mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Main);\n"]},"metadata":{},"sourceType":"module"}