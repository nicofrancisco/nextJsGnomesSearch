{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/FrontEnd/nextJsGnomeSearch/pages/containers/Main.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from 'next/link'; //import * as actions from \"../redux/actions/actions\";\n\nimport * as actions from \"../../src/actions/actions\";\nimport Loader from \"../components/Loader/Loader.js\";\nimport Home from './Home/Home.js';\nimport Header from \"./Header/Header.js\";\nimport Footer from \"./../components/Footer/Footer.js\";\n\nclass Main extends Component {\n  constructor({\n    gnomes,\n    fetchGnomes\n  }) {\n    super({\n      gnomes,\n      fetchGnomes\n    });\n\n    _defineProperty(this, \"gnomes\", void 0);\n\n    _defineProperty(this, \"fetchGnomes\", void 0);\n\n    _defineProperty(this, \"handleFirstTab\", e => {\n      if (e.keyCode === 9) {\n        document.body.classList.add('user-is-tabbing');\n        document.removeEventListener('keydown', this.handleFirstTab);\n      }\n    });\n\n    _defineProperty(this, \"handleClick\", e => {\n      document.body.classList.remove('user-is-tabbing');\n      document.addEventListener('keydown', this.handleFirstTab);\n    });\n\n    this.state = {};\n    this.gnomes = gnomes;\n    this.fetchGnomes = fetchGnomes;\n    ;\n  }\n\n  componentDidMount() {\n    //prevent ugly glow on button selected\n    document.addEventListener('keydown', this.handleFirstTab);\n    document.addEventListener('click', this.handleClick);\n    this.fetchGnomes();\n    console.log(this.gnomes);\n    console.log(this.props);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.gnomes.length === 0 ? __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.fetchGnomes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"INCREMENT\"), __jsx(Home, {\n      data: this.gnomes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n/*function mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}*/\n\n\nconst mapStateToProps = state => ({\n  gnomes: state.gnomes\n});\n/*const mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement()),\n    reset: () => dispatch(reset())\n  };\n};*/\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchGnomes: () => dispatch(actions.fetchGnomes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main); //export default connect(mapStateToProps, actions)(Main);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/FrontEnd/nextJsGnomeSearch/pages/containers/Main.js"],"names":["React","Component","connect","Link","actions","Loader","Home","Header","Footer","Main","constructor","gnomes","fetchGnomes","e","keyCode","document","body","classList","add","removeEventListener","handleFirstTab","remove","addEventListener","state","componentDidMount","handleClick","console","log","props","render","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAK3BS,EAAAA,WAAW,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,EAAuB;AAChC,UAAM;AAACD,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAAN;;AADgC;;AAAA;;AAAA,4CAkBhBC,CAAD,IAAO;AACpB,UAAIA,CAAC,CAACC,OAAF,KAAc,CAAlB,EAAqB;AACjBC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,iBAA5B;AACAH,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwC,KAAKC,cAA7C;AACH;AACJ,KAvBiC;;AAAA,yCAwBpBP,CAAD,IAAO;AACZE,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBI,MAAxB,CAA+B,iBAA/B;AACAN,MAAAA,QAAQ,CAACO,gBAAT,CAA0B,SAA1B,EAAqC,KAAKF,cAA1C;AACP,KA3BiC;;AAEhC,SAAKG,KAAL,GAAa,EAAb;AAEA,SAAKZ,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AAA+B;AAChC;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB;AACAT,IAAAA,QAAQ,CAACO,gBAAT,CAA0B,SAA1B,EAAqC,KAAKF,cAA1C;AACAL,IAAAA,QAAQ,CAACO,gBAAT,CAA0B,OAA1B,EAAmC,KAAKG,WAAxC;AAEA,SAAKb,WAAL;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,MAAjB;AACEe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH;;AAaDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKlB,MAAL,CAAYmB,MAAZ,KAAuB,CAAvB,GACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAQ,MAAA,OAAO,EAAE,KAAKlB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,EAIA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKD,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CAJF,CADF;AAiBD;;AApD0B;AAuD7B;;;;;;;AAMA,MAAMoB,eAAe,GAAGR,KAAK,KAAK;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACZ;AADkB,CAAL,CAA7B;AAIA;;;;;;;;;AAQA,MAAMqB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLrB,IAAAA,WAAW,EAAE,MAAMqB,QAAQ,CAAC7B,OAAO,CAACQ,WAAR,EAAD;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CACpB6B,eADoB,EAEpBC,kBAFoB,CAAP,CAGbvB,IAHa,CAAf,C,CAKA","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from 'next/link';\n//import * as actions from \"../redux/actions/actions\";\nimport * as actions from \"../../src/actions/actions\";\nimport Loader from \"../components/Loader/Loader.js\";\nimport Home from './Home/Home.js'\nimport Header from \"./Header/Header.js\";\nimport Footer from \"./../components/Footer/Footer.js\";\n\nclass Main extends Component {\n\n  gnomes;\n  fetchGnomes;\n\n  constructor({gnomes, fetchGnomes}){\n    super({gnomes, fetchGnomes});\n    this.state = {};\n\n    this.gnomes = gnomes;\n    this.fetchGnomes = fetchGnomes;;\n  }\n\n  componentDidMount() {\n    //prevent ugly glow on button selected\n    document.addEventListener('keydown', this.handleFirstTab);\n    document.addEventListener('click', this.handleClick);\n\n    this.fetchGnomes();\n    console.log(this.gnomes)\n      console.log(this.props)\n  }\n\n  handleFirstTab = (e) => {\n      if (e.keyCode === 9) {\n          document.body.classList.add('user-is-tabbing');\n          document.removeEventListener('keydown', this.handleFirstTab);\n      }\n  }\n  handleClick= (e) => {\n          document.body.classList.remove('user-is-tabbing');\n          document.addEventListener('keydown', this.handleFirstTab);\n  }\n\n  render() {\n    return (\n      <div>\n      {this.gnomes.length === 0 ? (\n        <Loader />\n      ) : (\n        <div>\n\n        <Header />\n        <button onClick={this.fetchGnomes}>INCREMENT</button>\n        <Home data={this.gnomes}/>{/*store={this.props.store}*/}\n        <Footer />\n\n        </div>\n      )}\n      </div>\n\n    );\n  }\n}\n\n/*function mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}*/\n\nconst mapStateToProps = state => ({\n  gnomes: state.gnomes\n});\n\n/*const mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement()),\n    reset: () => dispatch(reset())\n  };\n};*/\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchGnomes: () => dispatch(actions.fetchGnomes())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n\n//export default connect(mapStateToProps, actions)(Main);\n"]},"metadata":{},"sourceType":"module"}