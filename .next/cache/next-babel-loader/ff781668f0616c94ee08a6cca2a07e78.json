{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport axios from \"axios\";\nimport { gnomesAPI, genderGuessingAPI } from \"./../../utils\";\nimport { REQUEST_GNOMES, REQUEST_GENDER, SEARCH_TERM, FILTER_BY_JOB, ORDER_BY_FILTER, CURRENT_PAGE } from \"./types\";\nexport var getGnomes = function getGnomes(gnomes) {\n  return {\n    type: REQUEST_GNOMES,\n    payload: gnomes\n  };\n};\n/* eslint-disable */\n\nexport var fetchGnomes = function fetchGnomes() {\n  return function _callee(dispatch) {\n    var offlineGnomes, gnomes, _ref, _gnomes, gnomesToJSON;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            offlineGnomes = localStorage.getItem(\"gnomes\");\n\n            if (!offlineGnomes) {\n              _context.next = 5;\n              break;\n            }\n\n            gnomes = JSON.parse(offlineGnomes);\n            console.log(\"fetch\");\n            return _context.abrupt(\"return\", dispatch(getGnomes(gnomes)));\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(gnomesAPI));\n\n          case 8:\n            _ref = _context.sent;\n            _gnomes = _ref.data.Brastlewark;\n            gnomesToJSON = _JSON$stringify(_gnomes);\n            localStorage.setItem(\"gnomes\", gnomesToJSON);\n            dispatch(getGnomes(_gnomes));\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](5);\n            throw new Error(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 15]]);\n  };\n};\nexport var fetchGender = function fetchGender(params) {\n  return function _callee2(dispatch) {\n    var offlineGender, gender, data, genderToJSON;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            offlineGender = localStorage.getItem(\"gender\");\n\n            if (!offlineGender) {\n              _context2.next = 5;\n              break;\n            }\n\n            gender = JSON.parse(offlineGender);\n            console.log(\"GENDER local\");\n            return _context2.abrupt(\"return\", dispatch(getGender(gender)));\n\n          case 5:\n            _context2.prev = 5;\n            data = [{\n              \"name\": \"Tobus\",\n              \"gender\": \"male\",\n              \"probability\": 1,\n              \"count\": 3\n            }, {\n              \"name\": \"Fizkin\",\n              \"gender\": null,\n              \"probability\": 0,\n              \"count\": 0\n            }, {\n              \"name\": \"Malbin\",\n              \"gender\": \"male\",\n              \"probability\": 0.67,\n              \"count\": 3\n            }, {\n              \"name\": \"Midwig\",\n              \"gender\": null,\n              \"probability\": 0,\n              \"count\": 0\n            }, {\n              \"name\": \"Zedkin\",\n              \"gender\": null,\n              \"probability\": 0,\n              \"count\": 0\n            }, {\n              \"name\": \"Emmadette\",\n              \"gender\": null,\n              \"probability\": 0,\n              \"count\": 0\n            }].data; //await axios.get(genderGuessingAPI+params);\n\n            genderToJSON = _JSON$stringify(data);\n            console.log(data); //localStorage.setItem(\"gender\", genderToJSON);\n\n            dispatch(getGender(data));\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](5);\n            throw new Error(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[5, 12]]);\n  };\n};\nexport var getGender = function getGender(gender) {\n  return {\n    type: REQUEST_GENDER,\n    payload: gender\n  };\n};\n/* eslint-enable */\n\nexport var getSearchText = function getSearchText(searchTerm) {\n  return {\n    type: SEARCH_TERM,\n    payload: searchTerm\n  };\n};\nexport var filterByJob = function filterByJob(job) {\n  return {\n    type: FILTER_BY_JOB,\n    payload: job\n  };\n};\nexport var updateOrderBy = function updateOrderBy(order) {\n  return {\n    type: ORDER_BY_FILTER,\n    payload: order\n  };\n};\nexport var getCurrentPage = function getCurrentPage(page) {\n  return {\n    type: CURRENT_PAGE,\n    payload: page\n  };\n}; //////////","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/redux/actions/actions.js"],"names":["axios","gnomesAPI","genderGuessingAPI","REQUEST_GNOMES","REQUEST_GENDER","SEARCH_TERM","FILTER_BY_JOB","ORDER_BY_FILTER","CURRENT_PAGE","getGnomes","gnomes","type","payload","fetchGnomes","dispatch","offlineGnomes","localStorage","getItem","JSON","parse","console","log","get","data","Brastlewark","gnomesToJSON","setItem","Error","fetchGender","params","offlineGender","gender","getGender","genderToJSON","getSearchText","searchTerm","filterByJob","job","updateOrderBy","order","getCurrentPage","page"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { gnomesAPI, genderGuessingAPI} from \"./../../utils\";\n\nimport {\n  REQUEST_GNOMES,\n  REQUEST_GENDER,\n  SEARCH_TERM,\n  FILTER_BY_JOB,\n  ORDER_BY_FILTER,\n  CURRENT_PAGE\n} from \"./types\";\n\nexport const getGnomes = (gnomes) => ({\n  type: REQUEST_GNOMES,\n  payload: gnomes\n});\n\n/* eslint-disable */\nexport const fetchGnomes = () => async (dispatch) => {\n  const offlineGnomes = localStorage.getItem(\"gnomes\");\n  if (offlineGnomes) {\n    const gnomes = JSON.parse(offlineGnomes);\n    console.log(\"fetch\")\n    return dispatch(getGnomes(gnomes));\n  }\n\n  try {\n    const { data: { Brastlewark: gnomes } } = await axios.get(gnomesAPI);\n    const gnomesToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gnomes\", gnomesToJSON);\n    dispatch(getGnomes(gnomes));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const fetchGender = (params) => async (dispatch) => {\n  const offlineGender = localStorage.getItem(\"gender\");\n  if (offlineGender) {\n    const gender = JSON.parse(offlineGender);\n    console.log(\"GENDER local\")\n    return dispatch(getGender(gender));\n  }\n\n  try {\n    const {data} = [{\"name\":\"Tobus\",\"gender\":\"male\",\"probability\":1,\"count\":3},{\"name\":\"Fizkin\",\"gender\":null,\"probability\":0,\"count\":0},{\"name\":\"Malbin\",\"gender\":\"male\",\"probability\":0.67,\"count\":3},{\"name\":\"Midwig\",\"gender\":null,\"probability\":0,\"count\":0},{\"name\":\"Zedkin\",\"gender\":null,\"probability\":0,\"count\":0},{\"name\":\"Emmadette\",\"gender\":null,\"probability\":0,\"count\":0}];//await axios.get(genderGuessingAPI+params);\n    const genderToJSON = JSON.stringify(data);\n    console.log(data)\n    //localStorage.setItem(\"gender\", genderToJSON);\n    dispatch(getGender(data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const getGender = (gender) => ({\n  type: REQUEST_GENDER,\n  payload: gender\n});\n\n/* eslint-enable */\nexport const getSearchText = (searchTerm) => ({\n  type: SEARCH_TERM,\n  payload: searchTerm\n});\n\nexport const filterByJob = (job) => ({\n  type: FILTER_BY_JOB,\n  payload: job\n});\n\nexport const updateOrderBy = (order) => ({\n  type: ORDER_BY_FILTER,\n  payload: order\n});\n\nexport const getCurrentPage = (page) => ({\n  type: CURRENT_PAGE,\n  payload: page\n});\n\n\n\n//////////\n"]},"metadata":{},"sourceType":"module"}