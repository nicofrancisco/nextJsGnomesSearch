{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport GenderCard from \"./GenderCard/GenderCard\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\nvar Gender = function Gender(props) {\n  var name = gnome.name.substr(0, cut);\n\n  var _useState = useState([]),\n      gender = _useState[0],\n      setGender = _useState[1];\n\n  useEffect(function () {\n    props.fetchGender(\"name[]=\" + name).then(function (response) {\n      setGender(response);\n    });\n  }, []);\n  var to = props.to,\n      gnome = props.gnome;\n  var cut = gnome.name.indexOf(\" \");\n  /*useEffect(() => {\n     if (gender.length > 0) {\n          //renderGenderData(gender);\n     }\n  },[gender]);*/\n\n  return __jsx(GnomeCard, {\n    to: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(Avatar, {\n    src: gnome && gnome.thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: gnome && gnome.thumbnail,\n    alt: \"avatar \".concat(gnome && gnome.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), __jsx(\"header\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, gnome && gnome.name), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, gnome.professions.length > 0 ? gnome.professions.join(\" • \") : \"No Profession\")), __jsx(GnomeInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(GenderCard, {\n    gender: gender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(GnomeInfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Age\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, gnome && gnome.age)), __jsx(GnomeInfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Weight\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, gnome && Math.ceil(gnome.weight), \" \", __jsx(\"span\", {\n    className: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"KG\"))), __jsx(GnomeInfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Height\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, gnome && Math.ceil(gnome.height), \" \", __jsx(\"span\", {\n    className: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"CM\")))), __jsx(\"div\", {\n    className: \"banner-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gender: state.gender\n  };\n};\n\nexport default connect(mapStateToProps, actions)(Gender);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js"],"names":["React","useEffect","useState","connect","actions","convertColors","GenderCard","GnomeCard","Avatar","GnomeInfo","GnomeInfoList","Gender","props","name","gnome","substr","cut","gender","setGender","fetchGender","then","response","to","indexOf","thumbnail","professions","length","join","hair_color","age","Math","ceil","weight","height","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport  GenderCard  from \"./GenderCard/GenderCard\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\nconst Gender = (props) => {\n\n  const name = gnome.name.substr(0, cut);\n  const[gender, setGender] = useState([]);\n\n    useEffect(() => {\n\n      props.fetchGender( \"name[]=\"+ name ).then(response =>{\n        setGender(response)\n      })\n    }, []);\n\n    const { to,  gnome} = props;\n    const cut = gnome.name.indexOf(\" \");\n    /*useEffect(() => {\n       if (gender.length > 0) {\n            //renderGenderData(gender);\n       }\n    },[gender]);*/\n\n  return(\n\n  <GnomeCard to={to}>\n    <div className=\"banner\" />\n\n    <Avatar src={gnome && gnome.thumbnail}>\n      <img\n        src={gnome && gnome.thumbnail}\n        alt={`avatar ${gnome && gnome.name}`}\n      />\n    </Avatar>\n    <header className=\"description\">\n      <h2>{gnome && gnome.name}</h2>\n      <div>\n        {gnome.professions.length > 0\n          ? gnome.professions.join(\" • \")\n          : \"No Profession\"}\n      </div>\n    </header>\n    <GnomeInfo>\n    <GenderCard gender={gender}/>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Age</span>\n        <span>{gnome && gnome.age}</span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Weight</span>\n        <span>\n          {gnome && Math.ceil(gnome.weight)} <span className=\"unit\">KG</span>\n        </span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Height</span>\n        <span>\n          {gnome && Math.ceil(gnome.height)} <span className=\"unit\">CM</span>\n        </span>\n      </GnomeInfoList>\n    </GnomeInfo>\n    <div className=\"banner-footer\" />\n  </GnomeCard>\n\n)};\n\nconst mapStateToProps = state => ({\n  gender: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);\n"]},"metadata":{},"sourceType":"module"}