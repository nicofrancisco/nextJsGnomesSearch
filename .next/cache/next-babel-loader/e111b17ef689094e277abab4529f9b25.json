{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./../reducers/reducers\";\nconst initialValues = {\n  gnomes: [],\n  searchTerm: \"\",\n  filterBy: \"All\",\n  orderBy: \"\",\n  currentPage: 0\n};\n\nconst configure = (initialState = initialValues) => {\n  const composeEnhancers = compose;\n  /* eslint-disable */\n  // Deactivate redux devtools if production\n\n  /* eslint-enable */\n\n  const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(thunk))); // if (module.hot) {\n  //   // Enable Webpack hot module replacement for reducers\n  //   module.hot.accept(\"./../reducers\", () => {\n  //     /* eslint-disable */\n  //     const nextRootReducer = require(\"./../reducers/reducers\");\n  //     /* eslint-enable */\n  //     store.replaceReducer(nextRootReducer);\n  //   });\n  // }\n\n  return store;\n};\n\nexport default configure;","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/redux/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","thunk","reducers","initialValues","gnomes","searchTerm","filterBy","orderBy","currentPage","configure","initialState","composeEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,QAAQ,EAAE,KAHU;AAIpBC,EAAAA,OAAO,EAAE,EAJW;AAKpBC,EAAAA,WAAW,EAAE;AALO,CAAtB;;AAQA,MAAMC,SAAS,GAAG,CAACC,YAAY,GAAGP,aAAhB,KAAkC;AAClD,QAAMQ,gBAAgB,GAAGX,OAAzB;AACE;AACA;;AAGF;;AACA,QAAMY,KAAK,GAAGb,WAAW,CACvBG,QADuB,EAEvBQ,YAFuB,EAGvBC,gBAAgB,CAACb,eAAe,CAACG,KAAD,CAAhB,CAHO,CAAzB,CAPkD,CAalD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOW,KAAP;AACD,CAxBD;;AA0BA,eAAeH,SAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./../reducers/reducers\";\n\nconst initialValues = {\n  gnomes: [],\n  searchTerm: \"\",\n  filterBy: \"All\",\n  orderBy: \"\",\n  currentPage: 0\n};\n\nconst configure = (initialState = initialValues) => {\n  const composeEnhancers = compose;\n    /* eslint-disable */\n    // Deactivate redux devtools if production\n\n\n  /* eslint-enable */\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  // if (module.hot) {\n  //   // Enable Webpack hot module replacement for reducers\n  //   module.hot.accept(\"./../reducers\", () => {\n  //     /* eslint-disable */\n  //     const nextRootReducer = require(\"./../reducers/reducers\");\n  //     /* eslint-enable */\n  //     store.replaceReducer(nextRootReducer);\n  //   });\n  // }\n\n  return store;\n};\n\nexport default configure;\n"]},"metadata":{},"sourceType":"module"}