{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/FrontEnd/nextJsGnomeSearch/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// pages/_app.jsx\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n\nconst reducer = (state = {\n  foo: ''\n}, action) => {\n  switch (action.type) {\n    case 'FOO':\n      return _objectSpread({}, state, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n/**\n* @param {object} initialState The store's initial state (on the client side, the state of the server-side store is passed here)\n* @param {boolean} options.isServer Indicates whether makeStore is executed on the server or the client side\n* @param {Request} options.req Node.js `Request` object (only set before `getInitialProps` on the server side)\n* @param {Response} options.res Node.js `Response` object (only set before `getInitialProps` on the server side)\n* @param {boolean} options.debug User-defined debug flag\n* @param {string} options.storeKey The key that will be used to persist the store in the browser's `window` object for safe HMR\n*/\n\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // We can dispatch from here too\n    ctx.store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/FrontEnd/nextJsGnomeSearch/pages/_app.jsx"],"names":["React","createStore","Provider","App","withRedux","reducer","state","foo","action","type","payload","makeStore","initialState","options","MyApp","getInitialProps","Component","ctx","store","dispatch","pageProps","render","props"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,GAAG,EAAE;AAAN,CAAT,EAAoBC,MAApB,KAA+B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,+BAAWH,KAAX;AAAkBC,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA9B;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPD;AASA;;;;;;;;;;AAQA,MAAMK,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AACzC,SAAOZ,WAAW,CAACI,OAAD,EAAUO,YAAV,CAAlB;AACH,CAFD;;AAIA,MAAME,KAAN,SAAoBX,GAApB,CAAwB;AACpB,eAAaY,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA7B,EAA+C;AAC3C;AACAA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAAnB;AAEA,UAAMU,SAAS,GAAGJ,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAACG,MAAAA;AAAD,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA,SAAD;AAAYI,MAAAA,SAAZ;AAAuBF,MAAAA;AAAvB,QAAgC,KAAKI,KAA3C;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH;;AAjBmB;;AAoBxB,eAAehB,SAAS,CAACO,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["// pages/_app.jsx\nimport React from \"react\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n\nconst reducer = (state = {foo: ''}, action) => {\n    switch (action.type) {\n        case 'FOO':\n            return {...state, foo: action.payload};\n        default:\n            return state\n    }\n};\n\n/**\n* @param {object} initialState The store's initial state (on the client side, the state of the server-side store is passed here)\n* @param {boolean} options.isServer Indicates whether makeStore is executed on the server or the client side\n* @param {Request} options.req Node.js `Request` object (only set before `getInitialProps` on the server side)\n* @param {Response} options.res Node.js `Response` object (only set before `getInitialProps` on the server side)\n* @param {boolean} options.debug User-defined debug flag\n* @param {string} options.storeKey The key that will be used to persist the store in the browser's `window` object for safe HMR\n*/\nconst makeStore = (initialState, options) => {\n    return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n    static async getInitialProps({Component, ctx}) {\n        // We can dispatch from here too\n        ctx.store.dispatch({type: 'FOO', payload: 'foo'});\n\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n        return {pageProps};\n    }\n\n    render() {\n        const {Component, pageProps, store} = this.props;\n        return (\n            <Provider store={store}>\n                <Component {...pageProps} />\n            </Provider>\n        );\n    }\n}\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}