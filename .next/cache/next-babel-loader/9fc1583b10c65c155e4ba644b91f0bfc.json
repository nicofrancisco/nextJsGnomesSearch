{"ast":null,"code":"// @flow\nimport axios from \"axios\";\nimport { gnomesAPI, genderGuessingAPI } from \"./../../functions\"; //import type { Gnome } from \"./flow-typed/types\";\n\nimport { REQUEST_GNOMES, SEARCH_TERM, FILTER_BY_JOB, ORDER_BY_FILTER, CURRENT_PAGE } from \"./types\";\nexport const getGnomes = gnomes => ({\n  type: REQUEST_GNOMES,\n  payload: gnomes\n});\n/* eslint-disable */\n\nexport const fetchGnomes = () => async dispatch => {\n  const offlineGnomes = localStorage.getItem(\"gnomes\");\n\n  if (offlineGnomes) {\n    const gnomes = JSON.parse(offlineGnomes);\n    console.log(\"fetach\");\n    return dispatch(getGnomes(gnomes));\n  }\n\n  try {\n    const {\n      data: {\n        Brastlewark: gnomes\n      }\n    } = await axios.get(gnomesAPI);\n    const gnomesToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gnomes\", gnomesToJSON);\n    dispatch(getGnomes(gnomes));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const fetchGender = params => async dispatch => {\n  const offlineGender = localStorage.getItem(\"gender\");\n\n  if (offlineGender) {\n    const gender = JSON.parse(offlineGender);\n    console.log(\"GENDER local\");\n    return dispatch(getGender(gender));\n  }\n\n  try {\n    const {\n      data: {\n        Gender: gender\n      }\n    } = await axios.get(genderGuessingAPI + params);\n    const genderToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gender\", genderToJSON);\n    dispatch(getGender(gender));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const getGender = gender => ({\n  type: REQUEST_GENDER,\n  payload: gender\n});\n/* eslint-enable */\n\nexport const getSearchText = searchTerm => ({\n  type: SEARCH_TERM,\n  payload: searchTerm\n});\nexport const filterByJob = job => ({\n  type: FILTER_BY_JOB,\n  payload: job\n});\nexport const updateOrderBy = order => ({\n  type: ORDER_BY_FILTER,\n  payload: order\n});\nexport const getCurrentPage = page => ({\n  type: CURRENT_PAGE,\n  payload: page\n}); //////////","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/redux/actions/actions.js"],"names":["axios","gnomesAPI","genderGuessingAPI","REQUEST_GNOMES","SEARCH_TERM","FILTER_BY_JOB","ORDER_BY_FILTER","CURRENT_PAGE","getGnomes","gnomes","type","payload","fetchGnomes","dispatch","offlineGnomes","localStorage","getItem","JSON","parse","console","log","data","Brastlewark","get","gnomesToJSON","stringify","setItem","err","Error","fetchGender","params","offlineGender","gender","getGender","Gender","genderToJSON","REQUEST_GENDER","getSearchText","searchTerm","filterByJob","job","updateOrderBy","order","getCurrentPage","page"],"mappings":"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","sourcesContent":["// @flow\nimport axios from \"axios\";\nimport { gnomesAPI, genderGuessingAPI} from \"./../../functions\";\n//import type { Gnome } from \"./flow-typed/types\";\nimport {\n  REQUEST_GNOMES,\n  SEARCH_TERM,\n  FILTER_BY_JOB,\n  ORDER_BY_FILTER,\n  CURRENT_PAGE\n} from \"./types\";\n\nexport const getGnomes = (gnomes) => ({\n  type: REQUEST_GNOMES,\n  payload: gnomes\n});\n\n/* eslint-disable */\nexport const fetchGnomes = () => async (dispatch) => {\n  const offlineGnomes = localStorage.getItem(\"gnomes\");\n  if (offlineGnomes) {\n    const gnomes = JSON.parse(offlineGnomes);\n    console.log(\"fetach\")\n    return dispatch(getGnomes(gnomes));\n  }\n\n  try {\n    const { data: { Brastlewark: gnomes } } = await axios.get(gnomesAPI);\n    const gnomesToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gnomes\", gnomesToJSON);\n    dispatch(getGnomes(gnomes));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const fetchGender = (params) => async (dispatch) => {\n  const offlineGender = localStorage.getItem(\"gender\");\n  if (offlineGender) {\n    const gender = JSON.parse(offlineGender);\n    console.log(\"GENDER local\")\n    return dispatch(getGender(gender));\n  }\n\n  try {\n    const { data: { Gender: gender } } = await axios.get(genderGuessingAPI+params);\n    const genderToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gender\", genderToJSON);\n    dispatch(getGender(gender));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const getGender = (gender) => ({\n  type: REQUEST_GENDER,\n  payload: gender\n});\n\n/* eslint-enable */\nexport const getSearchText = (searchTerm) => ({\n  type: SEARCH_TERM,\n  payload: searchTerm\n});\n\nexport const filterByJob = (job) => ({\n  type: FILTER_BY_JOB,\n  payload: job\n});\n\nexport const updateOrderBy = (order) => ({\n  type: ORDER_BY_FILTER,\n  payload: order\n});\n\nexport const getCurrentPage = (page) => ({\n  type: CURRENT_PAGE,\n  payload: page\n});\n\n\n//////////\n"]},"metadata":{},"sourceType":"module"}