{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Main.js\";\nvar __jsx = React.createElement;\n// @flow\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from 'next/link'; //import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport * as actions from \"../redux/actions/actions\";\nimport Loading from \"../components/Loading/Loading\";\nimport Home from './Home/Home.js';\nimport Router from \"./../../routes/routes\";\nimport Details from \"./../containers/Details/Details.js\";\nimport Header from \"./Header/Header.js\";\nimport Footer from \"./../components/Footer/Footer.js\"; // Declaring Flow types for Props\n\n/*type Props = {\n  fetchGnomes: Function,\n  gnomes: Array<Gnome>\n};*/\n// now pass the Types declaration to our class component\n\nvar Main = /*#__PURE__*/function (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Main).apply(this, arguments));\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"mount\"); // Get all the gnomes from the Api\n      // this is an action creator we got from the react-redux connect method\n\n      this.props.fetchGnomes();\n    } // If there is not gnomes in the gnomes state (got from Redux state)\n    // it will render Loading component first while we can receive all the inhabitants\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      //\"/gnomes/297-Malbert-Wrongtink\">\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.gnomes.length === 0 ? __jsx(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }) : __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" Hola \", this.props.gnomes.length, \"/*\", __jsx(Link, {\n        href: \"./../containers/Home/Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"About Page link a\")), \"*/\", __jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(Home, {\n        data: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), __jsx(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), __jsx(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))) //<Details gnomes={this.props.gnomes} gnomeURL=\"0-Tobus-Quickwhistle\" />\n\n      /*<Router>\n       </Router>*/\n      ;\n    }\n  }]);\n\n  return Main;\n}(Component); // mapStateToProps we pass this function to the connect method to\n// inject our Redux states as props in Main container\n\n\nfunction mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Main);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Main.js"],"names":["React","Component","connect","Link","actions","Loading","Home","Router","Details","Header","Footer","Main","console","log","props","fetchGnomes","gnomes","length","mapStateToProps","state"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB,C,CAEA;;AACA;;;;AAKA;;IACMC,I;;;;;;;;;;;wCACgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADkB,CAElB;AACA;;AACA,WAAKC,KAAL,CAAWC,WAAX;AACD,K,CAED;AACA;;;;6BACS;AAAC;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,MAAlB,KAA6B,CAA7B,GACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY,KAAKH,KAAL,CAAWE,MAAX,CAAkBC,MAA9B,QAEE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,CAFF,QAKA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,EAMA,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAQA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,EASA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,CAJF,CADF,CAsBE;;AACA;;AAvBF;AA2BD;;;;EAtCgBb,S,GAyCnB;AACA;;;AACA,SAASiB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,MAAM,EAAEG,KAAK,CAACH;AADT,GAAP;AAGD;;AAED,eAAed,OAAO,CAACgB,eAAD,EAAkBd,OAAlB,CAAP,CAAkCO,IAAlC,CAAf","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from 'next/link';\n//import { BrowserRouter as Router } from \"react-router-dom\";\nimport * as actions from \"../redux/actions/actions\";\nimport Loading from \"../components/Loading/Loading\";\nimport Home from './Home/Home.js'\nimport Router from \"./../../routes/routes\";\nimport Details from \"./../containers/Details/Details.js\";\nimport Header from \"./Header/Header.js\";\nimport Footer from \"./../components/Footer/Footer.js\";\n\n// Declaring Flow types for Props\n/*type Props = {\n  fetchGnomes: Function,\n  gnomes: Array<Gnome>\n};*/\n\n// now pass the Types declaration to our class component\nclass Main extends Component {\n  componentDidMount() {\n    console.log(\"mount\")\n    // Get all the gnomes from the Api\n    // this is an action creator we got from the react-redux connect method\n    this.props.fetchGnomes();\n  }\n\n  // If there is not gnomes in the gnomes state (got from Redux state)\n  // it will render Loading component first while we can receive all the inhabitants\n  render() {//\"/gnomes/297-Malbert-Wrongtink\">\n    return (\n      <div>\n      {this.props.gnomes.length === 0 ? (\n        <Loading />\n      ) : (\n        <div> Hola {this.props.gnomes.length}\n\n        /*<Link href=\"./../containers/Home/Home\">\n          <a>About Page link a</a>\n        </Link>*/\n        <Header />\n        <Home data={this.props}/>\n\n        <Footer />\n        <Router>\n\n        </Router>\n\n        </div>\n\n      )}\n      </div>\n      //<Details gnomes={this.props.gnomes} gnomeURL=\"0-Tobus-Quickwhistle\" />\n      /*<Router>\n\n      </Router>*/\n    );\n  }\n}\n\n// mapStateToProps we pass this function to the connect method to\n// inject our Redux states as props in Main container\nfunction mapStateToProps(state) {\n  return {\n    gnomes: state.gnomes\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Main);\n"]},"metadata":{},"sourceType":"module"}