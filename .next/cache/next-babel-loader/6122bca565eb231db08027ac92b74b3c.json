{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Home/Home.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Transition, CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport Filters from \"./../Filters/Filters\";\nimport Card from \"./../../components/Card/Card\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport { HomeRow, HomeWrapper } from \"./HomeStyled\";\nimport Pagination from \"./../../components/Pagination/Pagination\";\nimport { filterGnomesBy } from \"./../../utils\";\n\nvar Home = function Home(props) {\n  console.log(\"props\");\n  console.log(props.store);\n  var searchTerm = props.searchTerm,\n      gnomes = props.gnomes,\n      gender = props.gender,\n      orderByFilter = props.orderByFilter,\n      currentPage = props.currentPage; //const [gender, setGender] = useState([]);\n\n  useEffect(function () {\n    console.log(\"calling again\");\n    /*props.fetchGender(format).then(response => JSON.stringify(response))\n    .then(gender => setGender(gender));\n    //LA PROMISE FUNCIONABA? response.json()) ??\n    console.log(\"gender x\")\n    console.log(gender)*/\n    //gender.fetchGender(format);\n    //\"name[]=Tobus&name[]=Fizkin&name[]=Malbin&name[]=Midwig&name[]=Malbin&name[]=Zedkin&name[]=Emmadette&name[]=Twizzle&name[]=Malbert&name[]=Kinthony&name[]=Cogwitz&name[]=Malbert&name[]=Ecki&name[]=Tobus&name[]=Emmadette\"\n\n    /*fetch(\"http://localhost:3001/links/\")\n      .then(response => response.json())\n      .then(data => setData(data));*/\n  }, []);\n  var itemsByPage = 15;\n  var gnomeNames = gnomes.map(function (gnome) {\n    return gnome.name;\n  });\n  var pageGnomes = gnomeNames.slice(itemsByPage * currentPage, itemsByPage + currentPage * itemsByPage); // slice will control the pagination it calculate the quantity of items we want to show by the current page\n\n  pageGnomes.map(function (gnome) {\n    return function (gnome) {\n      return gnome.name;\n    };\n  });\n\n  var getFirstName = function getFirstName(arr) {\n    var arrCroped = [];\n\n    for (var a = 0; a < arr.length; a++) {\n      var corte = arr[a].indexOf(\" \");\n      arrCroped[a] = arr[a].substr(0, corte);\n    }\n\n    return arrCroped;\n  };\n\n  var justRenderedPageNames = getFirstName(pageGnomes);\n\n  var parseToService = function parseToService(arrToFormat) {\n    var arrayFormated = [];\n\n    for (var b = 0; b < arrToFormat.length; b++) {\n      arrayFormated[b] = \"name[]=\" + arrToFormat[b];\n    }\n\n    return arrayFormated;\n  };\n\n  var format = parseToService(justRenderedPageNames).toString().replace(/,/g, \"&\"); // Filter the gnomes ordering them by youngest, oldest, lighter, heaviest, popularity\n  // Returns and array with all the filtered gnomes and finally generate\n  // our card based this filtered array\n\n  var searchFilters = filterGnomesBy(gnomes, orderByFilter).filter(function (gnome) {\n    // filter by profession\n    // If this gnome has this profession from redux state\n    // return the profession of this gnome\n    var isJob = gnome.professions.find(function (profession) {\n      return profession === props.filterBy;\n    }); // And then if this gnome know this profession return true\n    // Otherwise return false and ignore pass this gnome to the new array\n\n    var hasProfession = gnome.professions.some(function (profession) {\n      return profession === isJob;\n    }); // if filterBy state is all returns all gnomes if not return depending\n    // of the profession we're looking for\n\n    return props.filterBy === \"All\" ? gnome : hasProfession;\n  }).filter(function (gnome) {\n    // Filter name\n    // This comentted expression is for search exactly\n    // if match from the beginning of the string\n    // gnome.name.toLowerCase().search(searchTerm.toLowerCase()) === 0\n    // Get the gnomes that contains this bit of string within\n    var search = gnome.name.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0;\n    return search;\n  });\n  return __jsx(HomeWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Nicolas Bergues\"), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Assesment App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), __jsx(HomeRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Filters, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), __jsx(Pagination, {\n    page: currentPage,\n    updateGlobalState: props.getCurrentPage,\n    maxPages: Math.floor(searchFilters.length / itemsByPage),\n    callGender: format,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(HomeRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(TransitionGroup, {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, searchFilters.length > 0 ? searchFilters.slice(itemsByPage * currentPage, itemsByPage + currentPage * itemsByPage).map(function (gnome) {\n    return __jsx(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, __jsx(Card, {\n      key: gnome.id,\n      gnome: gnome && gnome,\n      to: \"\".concat(gnome.id, \"-\").concat(gnome.name.split(\" \").join(\"-\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }) : __jsx(\"div\", {\n    className: \"notFound\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"no gnomes founded for current search\"))), __jsx(Pagination, {\n    page: currentPage,\n    updateGlobalState: props.getCurrentPage,\n    maxPages: Math.floor(searchFilters.length / itemsByPage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n};\n\nfunction mapStateToProps(state) {\n  console.log(\"state\");\n  console.log(state);\n  return {\n    searchTerm: state.searchTerm,\n    gnomes: state.gnomes,\n    gender: state.gender,\n    filterBy: state.filterBy,\n    orderByFilter: state.orderBy,\n    currentPage: state.currentPage\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Home);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Home/Home.js"],"names":["React","useState","useEffect","Helmet","Transition","CSSTransition","TransitionGroup","connect","Filters","Card","actions","HomeRow","HomeWrapper","Pagination","filterGnomesBy","Home","props","console","log","store","searchTerm","gnomes","gender","orderByFilter","currentPage","itemsByPage","gnomeNames","map","gnome","name","pageGnomes","slice","getFirstName","arr","arrCroped","a","length","corte","indexOf","substr","justRenderedPageNames","parseToService","arrToFormat","arrayFormated","b","format","toString","replace","searchFilters","filter","isJob","professions","find","profession","filterBy","hasProfession","some","search","toLowerCase","getCurrentPage","Math","floor","id","split","join","mapStateToProps","state","orderBy"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { Transition, CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport Filters from \"./../Filters/Filters\";\nimport Card from \"./../../components/Card/Card\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport { HomeRow, HomeWrapper } from \"./HomeStyled\";\nimport Pagination from \"./../../components/Pagination/Pagination\";\nimport { filterGnomesBy } from \"./../../utils\";\n\n\nconst Home = (props) => {\n\n  console.log(\"props\")\n  console.log(props.store)\n  const { searchTerm, gnomes, gender, orderByFilter, currentPage } = props;\n\n  //const [gender, setGender] = useState([]);\n\n  useEffect(() => {\n    console.log(\"calling again\")\n    /*props.fetchGender(format).then(response => JSON.stringify(response))\n    .then(gender => setGender(gender));\n    //LA PROMISE FUNCIONABA? response.json()) ??\n    console.log(\"gender x\")\n    console.log(gender)*/\n\n    //gender.fetchGender(format);\n    //\"name[]=Tobus&name[]=Fizkin&name[]=Malbin&name[]=Midwig&name[]=Malbin&name[]=Zedkin&name[]=Emmadette&name[]=Twizzle&name[]=Malbert&name[]=Kinthony&name[]=Cogwitz&name[]=Malbert&name[]=Ecki&name[]=Tobus&name[]=Emmadette\"\n    /*fetch(\"http://localhost:3001/links/\")\n      .then(response => response.json())\n      .then(data => setData(data));*/\n  }, [])\n\n  const itemsByPage = 15;\n\n  const gnomeNames = gnomes.map(gnome => gnome.name)\n  const pageGnomes = gnomeNames.slice(\n  itemsByPage * currentPage,\n  itemsByPage + currentPage * itemsByPage\n  ) // slice will control the pagination it calculate the quantity of items we want to show by the current page\n\n  pageGnomes.map(gnome => (\n    gnome => gnome.name\n  ))\n\n  const getFirstName = arr =>{\n    var arrCroped = [];\n      for(var a=0; a<arr.length; a++){\n\n        var corte = arr[a].indexOf(\" \");\n        arrCroped[a] = arr[a].substr(0, corte);\n      }\n      return arrCroped;\n  }\n\n  const justRenderedPageNames = getFirstName(pageGnomes);\n\n  const parseToService = arrToFormat =>{\n    var arrayFormated = [];\n\n      for(var b=0; b<arrToFormat.length; b++){\n        arrayFormated[b] = \"name[]=\"+arrToFormat[b];\n      }\n\n      return arrayFormated;\n\n  }\n\n  const format = parseToService(justRenderedPageNames).toString().replace(/,/g, \"&\");\n\n\n  // Filter the gnomes ordering them by youngest, oldest, lighter, heaviest, popularity\n  // Returns and array with all the filtered gnomes and finally generate\n  // our card based this filtered array\n  const searchFilters = filterGnomesBy(gnomes, orderByFilter)\n    .filter(gnome => {\n      // filter by profession\n      // If this gnome has this profession from redux state\n      // return the profession of this gnome\n      const isJob = gnome.professions.find(\n        profession => profession === props.filterBy\n      );\n\n      // And then if this gnome know this profession return true\n      // Otherwise return false and ignore pass this gnome to the new array\n      const hasProfession = gnome.professions.some(\n        profession => profession === isJob\n      );\n      // if filterBy state is all returns all gnomes if not return depending\n      // of the profession we're looking for\n      return props.filterBy === \"All\" ? gnome : hasProfession;\n    })\n    .filter(gnome => {\n      // Filter name\n      // This comentted expression is for search exactly\n      // if match from the beginning of the string\n      // gnome.name.toLowerCase().search(searchTerm.toLowerCase()) === 0\n\n      // Get the gnomes that contains this bit of string within\n      const search =\n        gnome.name.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0;\n      return search;\n    });\n\n  return (\n    <HomeWrapper>\n      <Helmet>\n        <title>Nicolas Bergues</title>\n        <link rel=\"shortcut icon\" href=\"favicon.ico\" />\n        <meta\n          name=\"description\"\n          content=\"Assesment App\"\n        />\n      </Helmet>\n      <HomeRow>\n        <Filters />\n      </HomeRow>\n      <Pagination\n        page={currentPage}\n        updateGlobalState={props.getCurrentPage}\n        maxPages={Math.floor(searchFilters.length / itemsByPage)}\n        callGender={format}\n      />\n      <HomeRow>\n      <TransitionGroup className=\"cards\">\n        {searchFilters.length > 0 ? (\n          searchFilters\n            .slice(\n              itemsByPage * currentPage,\n              itemsByPage + currentPage * itemsByPage\n            )\n            .map(gnome => (\n              <CSSTransition\n              key={id}\n              timeout={500}\n              classNames=\"item\"\n            >\n              <Card\n                key={gnome.id}\n                gnome={gnome && gnome}\n                to={`${gnome.id}-${gnome.name.split(\" \").join(\"-\")}`}\n\n              />\n              </CSSTransition>\n            ))\n        ) : (\n          <div className={\"notFound\"}>no gnomes founded for current search</div>\n        )}\n        </TransitionGroup>\n      </HomeRow>\n      <Pagination\n        page={currentPage}\n        updateGlobalState={props.getCurrentPage}\n        maxPages={Math.floor(searchFilters.length / itemsByPage)}\n      />\n    </HomeWrapper>\n  );\n};\n\n\nfunction mapStateToProps(state) {\n  console.log(\"state\")\n  console.log(state)\n  return {\n    searchTerm: state.searchTerm,\n    gnomes: state.gnomes,\n    gender: state.gender,\n    filterBy: state.filterBy,\n    orderByFilter: state.orderBy,\n    currentPage: state.currentPage\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Home);\n"]},"metadata":{},"sourceType":"module"}