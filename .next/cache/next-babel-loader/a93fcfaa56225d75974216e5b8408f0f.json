{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\nclass Gender extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      to,\n      gnome\n    } = props;\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const cut = gnome.name.indexOf(\" \");\n    name = \"name[]=\" + gnome.name.substr(0, cut);\n    props.fetchGender(name).then(response => {\n      console.log(response);\n      console.log(props); //console.log(gender)\n    });\n  }\n  /*  useEffect(() => {\n      const cut = gnome.name.indexOf(\" \");\n      name = \"name[]=\"+ gnome.name.substr(0, cut);\n      props.fetchGender( name ).then(response =>{\n        console.log(response)\n        setGender(response)\n        console.log(props)\n        //console.log(gender)\n  \n      })\n  \n  \n    }, [])\n   const[gender, setGender] = useState([]);\n  \n  \n    const { to,  gnome} = props;*/\n\n\n  render() {\n    return __jsx(GnomeCard, {\n      to: to,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(Avatar, {\n      src: gnome && gnome.thumbnail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: gnome && gnome.thumbnail,\n      alt: `avatar ${gnome && gnome.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), __jsx(\"header\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, gnome && gnome.name), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, gnome.professions.length > 0 ? gnome.professions.join(\" • \") : \"No Profession\")), __jsx(GnomeInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(GnomeInfoList, {\n      hairColor: gnome && convertColors(gnome.hair_color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Age\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, gnome && gnome.age)), __jsx(GnomeInfoList, {\n      hairColor: gnome && convertColors(gnome.hair_color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Weight\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, gnome && Math.ceil(gnome.weight), \" \", __jsx(\"span\", {\n      className: \"unit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"KG\"))), __jsx(GnomeInfoList, {\n      hairColor: gnome && convertColors(gnome.hair_color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Height\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, gnome && Math.ceil(gnome.height), \" \", __jsx(\"span\", {\n      className: \"unit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"CM\")))), __jsx(\"div\", {\n      className: \"banner-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  gender: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js"],"names":["React","Component","useEffect","useState","connect","actions","convertColors","GnomeCard","Avatar","GnomeInfo","GnomeInfoList","Gender","constructor","props","to","gnome","state","componentDidMount","cut","name","indexOf","substr","fetchGender","then","response","console","log","render","thumbnail","professions","length","join","hair_color","age","Math","ceil","weight","height","mapStateToProps","gender"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\n\nclass Gender extends Component {\n\n  constructor(props){\n    super(props);\n    const { to,  gnome} = props;\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    const cut = gnome.name.indexOf(\" \");\n    name = \"name[]=\"+ gnome.name.substr(0, cut);\n    props.fetchGender( name ).then(response =>{\n      console.log(response)\n      console.log(props)\n      //console.log(gender)\n\n\n\n    })\n  }\n\n/*  useEffect(() => {\n    const cut = gnome.name.indexOf(\" \");\n    name = \"name[]=\"+ gnome.name.substr(0, cut);\n    props.fetchGender( name ).then(response =>{\n      console.log(response)\n      setGender(response)\n      console.log(props)\n      //console.log(gender)\n\n    })\n\n\n  }, [])\n const[gender, setGender] = useState([]);\n\n\n  const { to,  gnome} = props;*/\n\n  render(){\n\n  return(\n\n  <GnomeCard to={to}>\n    <div className=\"banner\" />\n\n    <Avatar src={gnome && gnome.thumbnail}>\n      <img\n        src={gnome && gnome.thumbnail}\n        alt={`avatar ${gnome && gnome.name}`}\n      />\n    </Avatar>\n    <header className=\"description\">\n      <h2>{gnome && gnome.name}</h2>\n      <div>\n        {gnome.professions.length > 0\n          ? gnome.professions.join(\" • \")\n          : \"No Profession\"}\n      </div>\n\n    </header>\n    <GnomeInfo>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Age</span>\n        <span>{gnome && gnome.age}</span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Weight</span>\n        <span>\n          {gnome && Math.ceil(gnome.weight)} <span className=\"unit\">KG</span>\n        </span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Height</span>\n        <span>\n          {gnome && Math.ceil(gnome.height)} <span className=\"unit\">CM</span>\n        </span>\n      </GnomeInfoList>\n    </GnomeInfo>\n    <div className=\"banner-footer\" />\n  </GnomeCard>\n\n)}\n};\n\nconst mapStateToProps = state => ({\n  gender: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);\n"]},"metadata":{},"sourceType":"module"}