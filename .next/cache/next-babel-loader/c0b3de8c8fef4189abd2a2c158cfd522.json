{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Home/Home.js\";\nvar __jsx = React.createElement;\n// @flow\nimport React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport Filters from \"./../Filters/Filters\";\nimport Card from \"./../../components/Card/Card\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport { HomeRow, HomeWrapper } from \"./HomeStyled\";\nimport EmptyMsg from \"./../../components/EmptyMsg/EmptyMsg\";\nimport Pagination from \"./../../components/Pagination/Pagination\";\nimport { filterGnomesBy } from \"./../../functions\"; // Import State Flow type for our redux state to props declaration\n//import type { State } from \"./../../../flow-typed/types\";\n// Declare our props with flow typed\n//type Props = State;\n\nclass Home extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    console.log(\"mount HOME\"); // Get all the gnomes from the Api\n    // this is an action creator we got from the react-redux connect method\n\n    this.props.fetchGnomes();\n  }\n\n  render() {\n    return __jsx(HomeWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"BrastlewarkerS || Home\"), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"little application where it's posible to consult information about the inhabitants of brastlewarks, age, weight, name, professions and more.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), __jsx(HomeRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Filters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(HomeRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, searchFilters.length > 0 ? searchFilters.slice(itemsByPage * currentPage, itemsByPage + currentPage * itemsByPage) // slice will control the pagination it calculate the quantity of items we want to show by the current page\n    .map(gnome => __jsx(Card, {\n      key: gnome.id,\n      gnome: gnome && gnome,\n      to: `/gnomes/${gnome.id}-${gnome.name.split(\" \").join(\"-\")}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) : __jsx(EmptyMsg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"GNOME NOT FOUND\")), __jsx(Pagination, {\n      page: currentPage,\n      updateGlobalState: props.getCurrentPage,\n      maxPages: Math.floor(searchFilters.length / itemsByPage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n} // Inject Redux states to React Props\n// Thanks to react-redux connect method\n\n\nfunction mapStateToProps(state) {\n  console.log(\"state\");\n  console.log(state);\n  return {\n    searchTerm: state.searchTerm,\n    gnomes: state.gnomes,\n    filterBy: state.filterBy,\n    orderByFilter: state.orderBy,\n    currentPage: state.currentPage\n  };\n} // This approach to get actions creators is easier\n// Since we get all the exported methods when we import the file\n// and just with passing in connect we have access to all of them\n\n\nexport default connect(mapStateToProps, actions)(Home);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Home/Home.js"],"names":["React","Component","Helmet","connect","Filters","Card","actions","HomeRow","HomeWrapper","EmptyMsg","Pagination","filterGnomesBy","Home","constructor","props","context","state","componentDidMount","console","log","fetchGnomes","render","searchFilters","length","slice","itemsByPage","currentPage","map","gnome","id","name","split","join","getCurrentPage","Math","floor","mapStateToProps","searchTerm","gnomes","filterBy","orderByFilter","orderBy"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport Filters from \"./../Filters/Filters\";\nimport Card from \"./../../components/Card/Card\";\nimport * as actions from \"./../../redux/actions/actions\";\nimport { HomeRow, HomeWrapper } from \"./HomeStyled\";\nimport EmptyMsg from \"./../../components/EmptyMsg/EmptyMsg\";\nimport Pagination from \"./../../components/Pagination/Pagination\";\nimport { filterGnomesBy } from \"./../../functions\";\n// Import State Flow type for our redux state to props declaration\n//import type { State } from \"./../../../flow-typed/types\";\n\n// Declare our props with flow typed\n//type Props = State;\n\nclass Home extends Component {\n\n  constructor(props , context){\n    super(props ,context);\n    this.state = {\n\n      }\n\n    }\n\n  componentDidMount() {\n    console.log(\"mount HOME\")\n    // Get all the gnomes from the Api\n    // this is an action creator we got from the react-redux connect method\n    this.props.fetchGnomes();\n\n\n  }\n\n\n\n\n  render() {\n  return (\n    <HomeWrapper>\n      <Helmet>\n        <title>BrastlewarkerS || Home</title>\n        <link rel=\"shortcut icon\" href=\"favicon.ico\" />\n        <meta\n          name=\"description\"\n          content=\"little application where it's posible to consult information about the inhabitants of brastlewarks, age, weight, name, professions and more.\"\n        />\n      </Helmet>\n      <HomeRow>\n        <Filters />\n      </HomeRow>\n      <HomeRow>\n        {searchFilters.length > 0 ? (\n          searchFilters\n            .slice(\n              itemsByPage * currentPage,\n              itemsByPage + currentPage * itemsByPage\n            ) // slice will control the pagination it calculate the quantity of items we want to show by the current page\n            .map(gnome => (\n              <Card\n                key={gnome.id}\n                gnome={gnome && gnome}\n                to={`/gnomes/${gnome.id}-${gnome.name.split(\" \").join(\"-\")}`}\n              />\n            ))\n        ) : (\n          <EmptyMsg>GNOME NOT FOUND</EmptyMsg>\n        )}\n      </HomeRow>\n      <Pagination\n        page={currentPage}\n        updateGlobalState={props.getCurrentPage}\n        maxPages={Math.floor(searchFilters.length / itemsByPage)}\n      />\n    </HomeWrapper>\n  );\n};\n}\n\n\n// Inject Redux states to React Props\n// Thanks to react-redux connect method\nfunction mapStateToProps(state) {\n  console.log(\"state\")\n  console.log(state)\n  return {\n    searchTerm: state.searchTerm,\n    gnomes: state.gnomes,\n    filterBy: state.filterBy,\n    orderByFilter: state.orderBy,\n    currentPage: state.currentPage\n  };\n}\n// This approach to get actions creators is easier\n// Since we get all the exported methods when we import the file\n// and just with passing in connect we have access to all of them\nexport default connect(mapStateToProps, actions)(Home);\n"]},"metadata":{},"sourceType":"module"}