{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/routes/routes.jsx\";\nvar __jsx = React.createElement;\n// @flow\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport AsynchRoutes from \"./AsyncRoutes\"; // Declaring Flow typed for our Props\n\n/*type Props = {\n  match: any\n};*/\n\n/*\n            Thanks to babel-plugin-syntax-dynamic-import and\n          babel-plugin-dynamic-import-webpack we can load our module on the fly\n          and pass in as props\n          AsynchRoutes is a Higher Order Component that receive dynamically our\n          route and generate our bundle\n          */\n\nvar Routes = function Routes() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"useRouter\", {\n    exact: true,\n    path: \"/gnomes/:gnome\",\n    component: function component(props) {\n      return __jsx(AsynchRoutes, {\n        gnomeURL: props.match.params.gnome,\n        loadingPromise: import(\"./../containers/Details/Details\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"useRouter\", {\n    render: function render() {\n      return __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Not Found :(\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default Routes;","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/routes/routes.jsx"],"names":["React","useRouter","AsynchRoutes","Routes","props","match","params","gnome"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAEA;;AACA;;;;AAIA;;;;;;;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,aACT,MAAC,YAAD;AACE,QAAA,QAAQ,EAAEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAD/B;AAEE,QAAA,cAAc,EAAE,OAAO,iCAAP,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAeI;AAAW,IAAA,MAAM,EAAE;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAN;AAAA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADa;AAAA,CAAf;;AAqBA,eAAeJ,MAAf","sourcesContent":["// @flow\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport AsynchRoutes from \"./AsyncRoutes\";\n\n// Declaring Flow typed for our Props\n/*type Props = {\n  match: any\n};*/\n\n/*\n            Thanks to babel-plugin-syntax-dynamic-import and\n          babel-plugin-dynamic-import-webpack we can load our module on the fly\n          and pass in as props\n          AsynchRoutes is a Higher Order Component that receive dynamically our\n          route and generate our bundle\n          */\n\nconst Routes = () => (\n  <div>\n\n\n\n      <useRouter\n        exact\n        path=\"/gnomes/:gnome\"\n        component={(props) => (\n          <AsynchRoutes\n            gnomeURL={props.match.params.gnome}\n            loadingPromise={import(\"./../containers/Details/Details\")}\n          />\n        )}\n      />\n\n      <useRouter render={() => <h1>Not Found :(</h1>} />\n\n  </div>\n);\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}