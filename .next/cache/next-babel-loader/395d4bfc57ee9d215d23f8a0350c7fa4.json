{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/FrontEnd/nextJsGnomeSearch/pages/components/Gender/Gender.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../src/actions/actions\";\nimport { convertColors } from \"./../../../utils\";\nimport GenderCard from \"./GenderCard/GenderCard\";\nimport GenderCardStyle from \"./GenderStyled\";\nimport Avatar from \"./AvatarStyles\";\nimport Info from \"./InfoStyles\";\nimport InfoList from \"./InfoListStyles\";\n\nconst Gender = props => {\n  const {\n    to,\n    gnome\n  } = props;\n  const cut = gnome ? gnome.name.indexOf(\" \") : 0;\n  const name = gnome ? gnome.name.substr(0, cut) : \"\";\n  const {\n    0: gender,\n    1: setGender\n  } = useState([]);\n  useEffect(() => {\n    props.fetchGender(\"name[]=\" + name).then(response => {\n      setGender(response);\n    });\n  }, []);\n  return __jsx(GenderCardStyle, {\n    to: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(Avatar, {\n    src: gnome && gnome.thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: gnome && gnome.thumbnail,\n    alt: `avatar ${gnome && gnome.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), __jsx(\"header\", {\n    className: \"headerBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, gnome && gnome.name), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, gnome && gnome.professions.length > 0 ? gnome.professions.join(\" • \") : \"No Profession\")), __jsx(GenderCard, {\n    gender: gender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(InfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Age\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, gnome && gnome.age)), __jsx(InfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Weight\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, gnome && Math.ceil(gnome.weight), \" \", __jsx(\"span\", {\n    className: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"KG\"))), __jsx(InfoList, {\n    hairColor: gnome && convertColors(gnome.hair_color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Height\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, gnome && Math.ceil(gnome.height), \" \", __jsx(\"span\", {\n    className: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"CM\")))), __jsx(\"div\", {\n    className: \"banner-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  gender: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/FrontEnd/nextJsGnomeSearch/pages/components/Gender/Gender.js"],"names":["React","useEffect","useState","connect","actions","convertColors","GenderCard","GenderCardStyle","Avatar","Info","InfoList","Gender","props","to","gnome","cut","name","indexOf","substr","gender","setGender","fetchGender","then","response","thumbnail","professions","length","join","hair_color","age","Math","ceil","weight","height","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAQC,UAAR,MAAyB,yBAAzB;AACA,OAAQC,eAAR,MAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAQC,IAAR,MAAkB,cAAlB;AACA,OAAQC,QAAR,MAAsB,kBAAtB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB,QAAM;AAAEC,IAAAA,EAAF;AAAOC,IAAAA;AAAP,MAAgBF,KAAtB;AAGA,QAAMG,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmB,GAAnB,CAAH,GAA6B,CAA9C;AACA,QAAMD,IAAI,GAAGF,KAAK,GAAGA,KAAK,CAACE,IAAN,CAAWE,MAAX,CAAkB,CAAlB,EAAqBH,GAArB,CAAH,GAA+B,EAAjD;AAEA,QAAK;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAAC,EAAD,CAAnC;AAEED,EAAAA,SAAS,CAAC,MAAM;AAEdW,IAAAA,KAAK,CAACS,WAAN,CAAmB,YAAWL,IAA9B,EAAqCM,IAArC,CAA0CC,QAAQ,IAAG;AAEnDH,MAAAA,SAAS,CAACG,QAAD,CAAT;AAED,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AAUF,SAEA,MAAC,eAAD;AAAiB,IAAA,EAAE,EAAEV,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEC,KAAK,IAAIA,KAAK,CAACU,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEV,KAAK,IAAIA,KAAK,CAACU,SADtB;AAEE,IAAA,GAAG,EAAG,UAASV,KAAK,IAAIA,KAAK,CAACE,IAAK,EAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EASE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,IAAIA,KAAK,CAACE,IAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,IAAIA,KAAK,CAACW,WAAN,CAAkBC,MAAlB,GAA2B,CAApC,GACGZ,KAAK,CAACW,WAAN,CAAkBE,IAAlB,CAAuB,KAAvB,CADH,GAEG,eAHN,CAFF,CATF,EAiBE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAER,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAkBE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEL,KAAK,IAAIT,aAAa,CAACS,KAAK,CAACc,UAAP,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOd,KAAK,IAAIA,KAAK,CAACe,GAAtB,CAFF,CADF,EAKE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEf,KAAK,IAAIT,aAAa,CAACS,KAAK,CAACc,UAAP,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,IAAIgB,IAAI,CAACC,IAAL,CAAUjB,KAAK,CAACkB,MAAhB,CADZ,OACqC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADrC,CAFF,CALF,EAWE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAElB,KAAK,IAAIT,aAAa,CAACS,KAAK,CAACc,UAAP,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,IAAIgB,IAAI,CAACC,IAAL,CAAUjB,KAAK,CAACmB,MAAhB,CADZ,OACqC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADrC,CAFF,CAXF,CAlBF,EAoCE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CAFA;AAyCA,CA7DF;;AA+DA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,MAAM,EAAEgB,KAAK,CAAChB;AADkB,CAAL,CAA7B;;AAIA,eAAehB,OAAO,CAAC+B,eAAD,EAAkB9B,OAAlB,CAAP,CAAkCO,MAAlC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../src/actions/actions\";\nimport { convertColors } from \"./../../../utils\";\nimport  GenderCard  from \"./GenderCard/GenderCard\";\nimport  GenderCardStyle from \"./GenderStyled\"\nimport Avatar from \"./AvatarStyles\";\nimport  Info from \"./InfoStyles\";\nimport  InfoList from \"./InfoListStyles\";\n\nconst Gender = (props) => {\n\n  const { to,  gnome} = props;\n\n\n  const cut = gnome ? gnome.name.indexOf(\" \") : 0;\n  const name = gnome ? gnome.name.substr(0, cut) : \"\";\n\n  const[gender, setGender] = useState([]);\n\n    useEffect(() => {\n\n      props.fetchGender( \"name[]=\"+ name ).then(response =>{\n\n        setGender(response)\n\n      })\n    }, []);\n\n\n  return(\n\n  <GenderCardStyle to={to}>\n    <div className=\"banner\" />\n\n    <Avatar src={gnome && gnome.thumbnail}>\n      <img\n        src={gnome && gnome.thumbnail}\n        alt={`avatar ${gnome && gnome.name}`}\n      />\n    </Avatar>\n    <header className=\"headerBox\">\n      <h2>{gnome && gnome.name}</h2>\n      <div>\n        {gnome && gnome.professions.length > 0\n          ? gnome.professions.join(\" • \")\n          : \"No Profession\"}\n      </div>\n    </header>\n    <GenderCard gender={gender}/>\n    <Info>\n      <InfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Age</span>\n        <span>{gnome && gnome.age}</span>\n      </InfoList>\n      <InfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Weight</span>\n        <span>\n          {gnome && Math.ceil(gnome.weight)} <span className=\"unit\">KG</span>\n        </span>\n      </InfoList>\n      <InfoList hairColor={gnome && convertColors(gnome.hair_color)}>\n        <span>Height</span>\n        <span>\n          {gnome && Math.ceil(gnome.height)} <span className=\"unit\">CM</span>\n        </span>\n      </InfoList>\n    </Info>\n    <div className=\"banner-footer\" />\n  </GenderCardStyle>\n\n)};\n\nconst mapStateToProps = state => ({\n  gender: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);\n"]},"metadata":{},"sourceType":"module"}