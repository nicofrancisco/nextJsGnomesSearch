{"ast":null,"code":"import axios from \"axios\";\nimport { gnomesAPI, genderGuessingAPI } from \"./../../utils\";\nimport { REQUEST_GNOMES, REQUEST_GENDER, SEARCH_TERM, FILTER_BY_JOB, ORDER_BY_FILTER, CURRENT_PAGE } from \"./types\";\nexport const getGnomes = gnomes => ({\n  type: REQUEST_GNOMES,\n  payload: gnomes\n});\n/* eslint-disable */\n\nexport const fetchGnomes = () => async dispatch => {\n  const offlineGnomes = localStorage.getItem(\"gnomes\");\n\n  if (offlineGnomes) {\n    const gnomes = JSON.parse(offlineGnomes);\n    console.log(\"fetch\");\n    return dispatch(getGnomes(gnomes));\n  }\n\n  try {\n    const {\n      data: {\n        Brastlewark: gnomes\n      }\n    } = await axios.get(gnomesAPI);\n    const gnomesToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gnomes\", gnomesToJSON);\n    dispatch(getGnomes(gnomes));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const fetchGender = params => async dispatch => {\n  const offlineGender = localStorage.getItem(\"gender\");\n\n  if (offlineGender) {\n    const gender = JSON.parse(offlineGender);\n    console.log(\"GENDER local\");\n    return dispatch(getGender(gender));\n  }\n\n  try {\n    const {\n      data\n    } = await axios.get(genderGuessingAPI + params); //const genderToJSON = JSON.stringify(data);\n\n    console.log(data); //localStorage.setItem(\"gender\", genderToJSON);\n\n    dispatch(getGender(data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const getGender = gender => ({\n  type: REQUEST_GENDER,\n  payload: gender\n});\n/* eslint-enable */\n\nexport const getSearchText = searchTerm => ({\n  type: SEARCH_TERM,\n  payload: searchTerm\n});\nexport const filterByJob = job => ({\n  type: FILTER_BY_JOB,\n  payload: job\n});\nexport const updateOrderBy = order => ({\n  type: ORDER_BY_FILTER,\n  payload: order\n});\nexport const getCurrentPage = page => ({\n  type: CURRENT_PAGE,\n  payload: page\n}); //////////","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/redux/actions/actions.js"],"names":["axios","gnomesAPI","genderGuessingAPI","REQUEST_GNOMES","REQUEST_GENDER","SEARCH_TERM","FILTER_BY_JOB","ORDER_BY_FILTER","CURRENT_PAGE","getGnomes","gnomes","type","payload","fetchGnomes","dispatch","offlineGnomes","localStorage","getItem","JSON","parse","console","log","data","Brastlewark","get","gnomesToJSON","stringify","setItem","err","Error","fetchGender","params","offlineGender","gender","getGender","getSearchText","searchTerm","filterByJob","job","updateOrderBy","order","getCurrentPage","page"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { gnomesAPI, genderGuessingAPI} from \"./../../utils\";\n\nimport {\n  REQUEST_GNOMES,\n  REQUEST_GENDER,\n  SEARCH_TERM,\n  FILTER_BY_JOB,\n  ORDER_BY_FILTER,\n  CURRENT_PAGE\n} from \"./types\";\n\nexport const getGnomes = (gnomes) => ({\n  type: REQUEST_GNOMES,\n  payload: gnomes\n});\n\n/* eslint-disable */\nexport const fetchGnomes = () => async (dispatch) => {\n  const offlineGnomes = localStorage.getItem(\"gnomes\");\n  if (offlineGnomes) {\n    const gnomes = JSON.parse(offlineGnomes);\n    console.log(\"fetch\")\n    return dispatch(getGnomes(gnomes));\n  }\n\n  try {\n    const { data: { Brastlewark: gnomes } } = await axios.get(gnomesAPI);\n    const gnomesToJSON = JSON.stringify(gnomes);\n    localStorage.setItem(\"gnomes\", gnomesToJSON);\n    dispatch(getGnomes(gnomes));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const fetchGender = (params) => async (dispatch) => {\n  const offlineGender = localStorage.getItem(\"gender\");\n  if (offlineGender) {\n    const gender = JSON.parse(offlineGender);\n    console.log(\"GENDER local\")\n    return dispatch(getGender(gender));\n  }\n\n  try {\n    const {data} = await axios.get(genderGuessingAPI+params);\n    //const genderToJSON = JSON.stringify(data);\n    console.log(data)\n    //localStorage.setItem(\"gender\", genderToJSON);\n    dispatch(getGender(data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const getGender = (gender) => ({\n  type: REQUEST_GENDER,\n  payload: gender\n});\n\n/* eslint-enable */\nexport const getSearchText = (searchTerm) => ({\n  type: SEARCH_TERM,\n  payload: searchTerm\n});\n\nexport const filterByJob = (job) => ({\n  type: FILTER_BY_JOB,\n  payload: job\n});\n\nexport const updateOrderBy = (order) => ({\n  type: ORDER_BY_FILTER,\n  payload: order\n});\n\nexport const getCurrentPage = (page) => ({\n  type: CURRENT_PAGE,\n  payload: page\n});\n\n\n\n//////////\n"]},"metadata":{},"sourceType":"module"}