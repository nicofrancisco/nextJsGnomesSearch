{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Details/Details.js\";\nvar __jsx = React.createElement;\n// @flow\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useRouter } from 'next/router'; //import { connect } from \"react-redux\";\n\nimport DetailsInfo from \"./../../components/DetailsInfo/DetailsInfo\";\nimport Card from \"./../../components/Card/Card\";\nimport SubTitle from \"./../../components/SubTitle/SubTitle\";\nimport EmptyMsg from \"./../../components/EmptyMsg/EmptyMsg\";\nimport myApp from \"./../../MyApp.js\";\nimport { DetailsRow, DetailsWrapper, FriendsRow, LinkBack } from \"./DetailsStyled\";\n/*type Props = {\n  gnomeURL: object,\n  gnomes: Array<object>\n};*/\n\nconst Details = ({\n  gnomeURL,\n  gnomes\n}) => {\n  // when page change take scroll to top\n  //console.log(getInitialProps)\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log(id);\n  console.log(\"gnomeURL\");\n  console.log(gnomeURL);\n  console.log(\"gnomes\");\n  console.log(gnomes); //window.scroll(null, 0);\n\n  const selectedGnome = gnomes && gnomes.find(gnome => gnomeURL === `${gnome.id}-${gnome.name.split(\" \").join(\"-\")}`);\n  const friends = selectedGnome && selectedGnome.friends.map(friend => friend.toLowerCase());\n  const renderFriends = gnomes && gnomes.filter(gnome => friends.some(friend => gnome.name.toLowerCase() === friend));\n  return __jsx(DetailsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"BrastlewarkerS || \", selectedGnome.name), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${selectedGnome.name} is a gnome that has ${selectedGnome.hair_color} hair, it's ${selectedGnome.age} and weight ${selectedGnome.weight}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), __jsx(DetailsRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(LinkBack, {\n    to: \"/\",\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"⇦ Back To Home\"), selectedGnome && __jsx(DetailsInfo, {\n    gnome: selectedGnome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(FriendsRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(SubTitle, {\n    text: \"Friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), renderFriends.length > 0 ? renderFriends.map(friend => __jsx(Card, {\n    key: `${friend.id}`,\n    gnome: friend,\n    to: `${friend.id}-${friend.name.split(\" \").join(\"-\")}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })) : __jsx(EmptyMsg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, selectedGnome.name.toUpperCase(), \" HAS NOT FRIENDS :(\")));\n};\n/*const mapStateToProps = state => ({\n  gnomes: state.gnomes\n});*/\n//export default connect(mapStateToProps)(Details);\n\n\nexport default Details;","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/containers/Details/Details.js"],"names":["React","Helmet","useRouter","DetailsInfo","Card","SubTitle","EmptyMsg","myApp","DetailsRow","DetailsWrapper","FriendsRow","LinkBack","Details","gnomeURL","gnomes","router","id","query","console","log","selectedGnome","find","gnome","name","split","join","friends","map","friend","toLowerCase","renderFriends","filter","some","hair_color","age","weight","length","toUpperCase"],"mappings":"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","sourcesContent":["// @flow\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useRouter } from 'next/router'\n//import { connect } from \"react-redux\";\nimport DetailsInfo from \"./../../components/DetailsInfo/DetailsInfo\";\nimport Card from \"./../../components/Card/Card\";\nimport SubTitle from \"./../../components/SubTitle/SubTitle\";\nimport EmptyMsg from \"./../../components/EmptyMsg/EmptyMsg\";\nimport myApp from \"./../../MyApp.js\";\nimport {\n  DetailsRow,\n  DetailsWrapper,\n  FriendsRow,\n  LinkBack\n} from \"./DetailsStyled\";\n\n/*type Props = {\n  gnomeURL: object,\n  gnomes: Array<object>\n};*/\n\nconst Details = ({ gnomeURL, gnomes }) => {\n  // when page change take scroll to top\n  //console.log(getInitialProps)\n\n\n  const router = useRouter()\n  const { id } = router.query\n\n  console.log (id)\n\n\n  console.log(\"gnomeURL\")\n  console.log(gnomeURL)\n  console.log(\"gnomes\")\n  console.log(gnomes)\n\n  //window.scroll(null, 0);\n  const selectedGnome =\n    gnomes &&\n    gnomes.find(\n      gnome => gnomeURL === `${gnome.id}-${gnome.name.split(\" \").join(\"-\")}`\n    );\n\n  const friends =\n    selectedGnome && selectedGnome.friends.map(friend => friend.toLowerCase());\n\n  const renderFriends =\n    gnomes &&\n    gnomes.filter(gnome =>\n      friends.some(friend => gnome.name.toLowerCase() === friend)\n    );\n\n  return (\n    <DetailsWrapper>\n      <Helmet>\n        <title>BrastlewarkerS || {selectedGnome.name}</title>\n        <link rel=\"shortcut icon\" href=\"favicon.ico\" />\n        <meta\n          name=\"description\"\n          content={`${selectedGnome.name} is a gnome that has ${\n            selectedGnome.hair_color\n          } hair, it's ${selectedGnome.age} and weight ${selectedGnome.weight}`}\n        />\n      </Helmet>\n      <DetailsRow>\n        <LinkBack to=\"/\" href=\"/\">\n          {\"⇦ Back To Home\"}\n        </LinkBack>\n        {selectedGnome && <DetailsInfo gnome={selectedGnome} />}\n      </DetailsRow>\n      <FriendsRow>\n        <SubTitle text=\"Friends\" />\n        {renderFriends.length > 0 ? (\n          renderFriends.map(friend => (\n            <Card\n              key={`${friend.id}`}\n              gnome={friend}\n              to={`${friend.id}-${friend.name.split(\" \").join(\"-\")}`}\n            />\n          ))\n        ) : (\n          <EmptyMsg>\n            {selectedGnome.name.toUpperCase()} HAS NOT FRIENDS :(\n          </EmptyMsg>\n        )}\n      </FriendsRow>\n    </DetailsWrapper>\n  );\n};\n\n/*const mapStateToProps = state => ({\n  gnomes: state.gnomes\n});*/\n\n//export default connect(mapStateToProps)(Details);\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}