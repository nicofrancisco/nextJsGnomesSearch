{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\nvar Gender = /*#__PURE__*/function (_Component) {\n  _inherits(Gender, _Component);\n\n  function Gender(props) {\n    var _this;\n\n    _classCallCheck(this, Gender);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gender).call(this, props));\n    var to = props.to,\n        gnome = props.gnome;\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Gender, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var cut = this.props.gnome.name.indexOf(\" \");\n      name = \"name[]=\" + this.props.gnome.name.substr(0, cut);\n      this.props.fetchGender(name).then(function (response) {\n        console.log(response);\n        console.log(props); //console.log(gender)\n      });\n    }\n    /*  useEffect(() => {\n        const cut = gnome.name.indexOf(\" \");\n        name = \"name[]=\"+ gnome.name.substr(0, cut);\n        props.fetchGender( name ).then(response =>{\n          console.log(response)\n          setGender(response)\n          console.log(props)\n          //console.log(gender)\n    \n        })\n    \n    \n      }, [])\n     const[gender, setGender] = useState([]);\n    \n    \n      const { to,  gnome} = props;*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(GnomeCard, {\n        to: this.props.to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), __jsx(Avatar, {\n        src: this.props.gnome && this.props.gnome.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: this.props.gnome && this.props.gnome.thumbnail,\n        alt: \"avatar \".concat(this.props.gnome && this.props.gnome.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), __jsx(\"header\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.gnome && this.props.gnome.name), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.gnome.professions.length > 0 ? this.props.gnome.professions.join(\" â€¢ \") : \"No Profession\")), __jsx(GnomeInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(GnomeInfoList, {\n        hairColor: this.props.gnome && convertColors(this.props.gnome.hair_color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Age\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.gnome && this.props.gnome.age)), __jsx(GnomeInfoList, {\n        hairColor: this.props.gnome && convertColors(this.props.gnome.hair_color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Weight\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.props.gnome && Math.ceil(this.props.gnome.weight), \" \", __jsx(\"span\", {\n        className: \"unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"KG\"))), __jsx(GnomeInfoList, {\n        hairColor: this.props.gnome && convertColors(this.props.gnome.hair_color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Height\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.gnome && Math.ceil(this.props.gnome.height), \" \", __jsx(\"span\", {\n        className: \"unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"CM\")))), __jsx(\"div\", {\n        className: \"banner-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Gender;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gender: state.gender\n  };\n};\n\nexport default connect(mapStateToProps, actions)(Gender);","map":{"version":3,"sources":["/Users/nicolasfbergues/Desktop/Nico/Trabajo/Aerolab/NextDemo/learnnextjs-demo/pages/components/Gender/Gender.js"],"names":["React","Component","useEffect","useState","connect","actions","convertColors","GnomeCard","Avatar","GnomeInfo","GnomeInfoList","Gender","props","to","gnome","state","cut","name","indexOf","substr","fetchGender","then","response","console","log","thumbnail","professions","length","join","hair_color","age","Math","ceil","weight","height","mapStateToProps","gender"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions/actions\";\nimport { convertColors } from \"./../../utils\";\nimport { GnomeCard, Avatar, GnomeInfo, GnomeInfoList } from \"./GenderStyled\";\n\n\nclass Gender extends Component {\n\n  constructor(props){\n    super(props);\n    const { to,  gnome} = props;\n    this.state = {};\n  }\n\n\n  componentDidMount() {\n    const cut = this.props.gnome.name.indexOf(\" \");\n    name = \"name[]=\"+ this.props.gnome.name.substr(0, cut);\n    this.props.fetchGender( name ).then(response =>{\n      console.log(response)\n      console.log(props)\n      //console.log(gender)\n\n\n\n    })\n  }\n\n/*  useEffect(() => {\n    const cut = gnome.name.indexOf(\" \");\n    name = \"name[]=\"+ gnome.name.substr(0, cut);\n    props.fetchGender( name ).then(response =>{\n      console.log(response)\n      setGender(response)\n      console.log(props)\n      //console.log(gender)\n\n    })\n\n\n  }, [])\n const[gender, setGender] = useState([]);\n\n\n  const { to,  gnome} = props;*/\n\n  render(){\n\n  return(\n\n  <GnomeCard to={this.props.to}>\n    <div className=\"banner\" />\n\n    <Avatar src={this.props.gnome && this.props.gnome.thumbnail}>\n      <img\n        src={this.props.gnome && this.props.gnome.thumbnail}\n        alt={`avatar ${this.props.gnome && this.props.gnome.name}`}\n      />\n    </Avatar>\n    <header className=\"description\">\n      <h2>{this.props.gnome && this.props.gnome.name}</h2>\n      <div>\n        {this.props.gnome.professions.length > 0\n          ? this.props.gnome.professions.join(\" â€¢ \")\n          : \"No Profession\"}\n      </div>\n\n    </header>\n    <GnomeInfo>\n      <GnomeInfoList hairColor={this.props.gnome && convertColors(this.props.gnome.hair_color)}>\n        <span>Age</span>\n        <span>{this.props.gnome && this.props.gnome.age}</span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={this.props.gnome && convertColors(this.props.gnome.hair_color)}>\n        <span>Weight</span>\n        <span>\n          {this.props.gnome && Math.ceil(this.props.gnome.weight)} <span className=\"unit\">KG</span>\n        </span>\n      </GnomeInfoList>\n      <GnomeInfoList hairColor={this.props.gnome && convertColors(this.props.gnome.hair_color)}>\n        <span>Height</span>\n        <span>\n          {this.props.gnome && Math.ceil(this.props.gnome.height)} <span className=\"unit\">CM</span>\n        </span>\n      </GnomeInfoList>\n    </GnomeInfo>\n    <div className=\"banner-footer\" />\n  </GnomeCard>\n\n)}\n};\n\nconst mapStateToProps = state => ({\n  gender: state.gender\n});\n\nexport default connect(mapStateToProps, actions)(Gender);\n"]},"metadata":{},"sourceType":"module"}