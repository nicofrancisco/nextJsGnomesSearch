{"version":3,"file":"static/webpack/static/development/pages/index.js.edb5ce1ed3381dc22ded.hot-update.js","sources":["webpack:///./utils.js"],"sourcesContent":["export const itemsByPage = 15;\nexport const gnomesAPI = \"https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\";\nexport const genderGuessingAPI = \"https://api.genderize.io/?\";\n\n// need to pay to use the genderize.io service for bulk process\n/*export function getCurrentPageGenderFormat (gnomes, currentPage){\n\n  let updatedPage = currentPage;\n\n  const gnomeNames = gnomes.map(gnome => gnome.name)\n  const pageGnomes = gnomeNames.slice(\n    itemsByPage * updatedPage,\n    itemsByPage + updatedPage * itemsByPage\n  )\n\n  pageGnomes.map(gnome => (\n    gnome => gnome.name\n  ))\n\n  const getFirstName = arr =>{\n    var arrCroped = [];\n      for(var a=0; a<arr.length; a++){\n\n        var corte = arr[a].indexOf(\" \");\n        arrCroped[a] = arr[a].substr(0, corte);\n      }\n\n      function removeDuplicates(array) {\n        return array.filter((a, b) => array.indexOf(a) === b)\n      };\n      return removeDuplicates(arrCroped);\n  }\n\n  const justRenderedPageNames = getFirstName(pageGnomes);\n\n  const parseToService = arrToFormat =>{\n    var arrayFormated = [];\n\n      for(var b=0; b<arrToFormat.length; b++){\n        arrayFormated[b] = \"name[]=\"+arrToFormat[b];\n      }\n\n      return arrayFormated;\n\n  }\n\n  const format = parseToService(justRenderedPageNames).toString().replace(/,/g, \"&\");\n\n  return format;\n}*/\n\nexport function getFirstNames (gnomes, currentPage){\n\n  let updatedPage = currentPage;\n\n  const gnomeNames = gnomes.map(gnome => gnome.name)\n  const pageGnomes = gnomeNames.slice(\n    itemsByPage * updatedPage,\n    itemsByPage + updatedPage * itemsByPage\n  )\n\n  pageGnomes.map(gnome => (\n    gnome => gnome.name\n  ))\n\n  const getFirstName = arr =>{\n    var arrCroped = [];\n      for(var a=0; a<arr.length; a++){\n\n        var cut = arr[a].indexOf(\" \");\n        arrCroped[a] = arr[a].substr(0, cut);\n      }\n      function removeDuplicates(array) {\n        return array.filter((a, b) => array.indexOf(a) === b)\n      };\n      return removeDuplicates(arrCroped);\n  }\n\n  const onlyNames = getFirstName(pageGnomes);\n  return onlyNames;\n}\n\n\nexport function convertColors(color) {\n\n  if(color !== undefined){\n\n    const colorName = color.toLowerCase();\n    var hex = \"\";\n    switch (colorName) {\n      case \"red\":\n        hex = \"#f66969\";\n        break;\n      case \"pink\":\n        hex = \"#f6a2c0\";\n        break;\n      case \"green\":\n        hex = \"#80e8d4\";\n        break;\n      case \"black\":\n        hex = \"#4d5253\";\n        break;\n      case \"gray\":\n        hex = \"#8d9395\";\n        break;\n      default:\n        hex = \"#000\";\n        break;\n    }\n    return hex;\n\n  }else{\n    return \"#8d9395\";\n  }\n}\n\nexport function filterGnomesBy(array, orderByFilter) {\n  if (!Array.isArray(array)) {\n    console.log(\"es nulo\")\n    return null;\n  }\n\n  if (orderByFilter.toLowerCase() === \"Oldest\".toLowerCase()) {\n    return array.sort((a, b) => b.age - a.age);\n  }\n  else if (orderByFilter.toLowerCase() === \"Youngest\".toLowerCase()) {\n    return array.sort((a, b) => a.age - b.age);\n  }\n  else if (orderByFilter.toLowerCase() === \"Heaviest\".toLowerCase()) {\n    return array.sort((a, b) => b.weight - a.weight);\n  }\n  else if (orderByFilter.toLowerCase() === \"lightest\".toLowerCase()) {\n    return array.sort((a, b) => a.weight - b.weight);\n  }\n  else if (orderByFilter.toLowerCase() === \"Most Friendly\".toLowerCase()) {\n    return array.sort((a, b) => b.friends.length - a.friends.length);\n  }\n  else if (orderByFilter.toLowerCase() === \"Less Friendly\".toLowerCase()) {\n    return array.sort((a, b) => a.friends.length - b.friends.length);\n  }\n  console.log(array)\n  return array;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AAEA;AAEA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AADA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlBA;AACA;AAmBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}